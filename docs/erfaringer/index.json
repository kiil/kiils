[
    
    
    {
        "url": "/tools/atom/",
        "title": "atom",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/",
        "title": "Emner",
        "content": "Emner i det arbejde Kiils laver\n"
    }
    
    , 
    {
        "url": "/erfaringer/",
        "title": "Erfaringer",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/mediedrift/2020-2021/",
        "title": "Ikke godt",
        "content": "  Februar 2020 sammelignet med 2021   Helt nøjagtigt 15539,97 kroner i 2020 og 7913,13 i 2021.\nFra en månedlig indtægt på abonnenter på knap 16000 ned til knap 8000. Alrså en halvering på blot et år.\nDet er status efter et år med corona hvor jeg også mistede alle mine annonceindtæger. Alle.\n"
    }
    
    , 
    {
        "url": "/",
        "title": "Kiils | digitalt mediebureau",
        "content": " 18 års praktisk erfaring i krydsfeltet mellem internet, journalistik og sociale medier Måske kan jeg hjælpe dig? Kontakt mig nu!    "
    }
    
    , 
    {
        "url": "/skribenter/lennart-kiil/",
        "title": "Lennart Kiil",
        "content": "Lennart Kiil kan også findes på FOLKETS , og på LinkedIn .\n"
    }
    
    , 
    {
        "url": "/tools/perl/",
        "title": "perl",
        "content": ""
    }
    
    , 
    {
        "url": "/skribenter/",
        "title": "Skribenter",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/struktur/",
        "title": "struktur",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/terminal/",
        "title": "terminal",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/tips/",
        "title": "tips",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/",
        "title": "Tools",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/tricks/",
        "title": "tricks",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/google/",
        "title": "Google",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/indholdsh%C3%A5ndtering/",
        "title": "Indholdshåndtering",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/soeg-kun-andre-lande/",
        "title": "Udeluk land i søgning",
        "content": "Hvadd nu hvis man gerne vil frasorte resultater fra et bestemt land?\nSøgeord -dk "
    }
    
    , 
    {
        "url": "/tools/vim/",
        "title": "Vim",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-andet/",
        "title": "vim cheat sheet",
        "content": "CTRL-] er CTRL-å\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-buffers/",
        "title": "vim cheat sheet",
        "content": ":ba open each buffer in \u0026ldquo;window\u0026rdquo; / \u0026ldquo;split\u0026rdquo; :enew doesn\u0026rsquo;t take any arguments and opens a blank buffer. Kræver ikke filnavn :new in new window / split :edit closes my existing buffer.\n:buffers: List available buffers :ls: Same as above :bn: Switch to next buffer :bp: Switch to previous buffer :bfirst: Switch to first buffer :blast: Switch to last buffer :bdelete: Delete the current buffer :badd: Open a new buffer with the filename that follows :e: Edit another file in a new buffer and switch to it. også :edit - kræver filnavn\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-erstat/",
        "title": "vim cheat sheet",
        "content": "You don\u0026rsquo;t need to use the slash character as the expression delimiter. Whatever character follows the :s is defined to be the delimiter character. You can use most non-alphanumeric characters (but not , \u0026quot; or |).\nKun på søgeordet nærmest cursoren\n:s/[pattern]/[replacement] Eksempel:\n:s/han/hun Kun på den linje hvor cursoren befinder sig\n:s/[pattern]/[replacement]/g Eksempel:\n:s/han/hun/g Hele filen\n:%s/[pattern]/[replacement]/g Eksempel:\n:%s/han/hun/g Hvis hvert tilfælde skal bekræftes tilføjes et c for confirm, sådan her:\n:%s/han/hun/gc "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-file-management/",
        "title": "vim cheat sheet",
        "content": "** Gem en del af en fil, ved at skrive v bevægelse :w FILNAVN **\n** Indsæt indholdet af en fil, ved at skrive :r FILNAVN **\nMange filer Mange filer fra kommandolinjen inden vim åbnes vim *.md # åbner alle md filer i pågældende folder Mange filer når vim allerede er åben Se: https://vi.stackexchange.com/questions/2607/how-to-open-multiple-files-matching-a-wildcard-expression\n:args *.md # åbner alle md filer i args-listen :n[ext] *.md # aåbner alle md fil som buffers :e ny .md buffer med navn\nnetrw :Lex så bliver vinduet der og filerne åbnes en efter en til højre for som i project drawer\nOpening files in vim\nOpening a new file for editing\nIf you’re already in vim, then there’s no need to exit it just to open a new file. Simply switch to the command mode (ESC) and type:\n:e /path/to/file That will open the file for editing. You can also use the tab-key for autocompletion of the path. Please note that the current file must be saved, or you’ve to use :e! to discard the unsaved changes.\nReading in a file into the current buffer (file)\nHave you found yourself in the situation, where you had to merge the content of two files? There’s always the shell way by using cat foo \u0026raquo;bar. But what about when you don’t want to append the content on the end of the file, or if you’re already in vim?\nOf course we can also to that! Instead of :e, we simply use :r:\n:r /path/to/file Can’t remember those commands? Just try to remember, :e means edit, while :r means read.\nnetrw - den indbyggede fil-browser Use the r key to set Reverse sorting order. Then press the s key to sort using a particular style : by name, time or file size.\nt\tEnter the file/directory under the cursor in a new tab\n Flere    Map Action     \u0026lt;F1\u0026gt; Causes Netrw to issue help   \u0026lt;cr\u0026gt; Netrw will enter the directory or read the file   \u0026lt;del\u0026gt; Netrw will attempt to remove the file/directory   - Makes Netrw go up one directory   a Toggles between normal display, hiding (suppress display of files matching g:netrw_list_hide) showing (display only files which match g:netrw_list_hide)   c Make browsing directory the current directory   C Setting the editing window   d Make a directory   D Attempt to remove the file(s)/directory(ies)   gb Go to previous bookmarked directory   gh Quick hide/unhide of dot-files   \u0026lt;c-h\u0026gt; Edit file hiding list   i Cycle between thin, long, wide and tree listings   \u0026lt;c-l\u0026gt; Causes Netrw to refresh the directory listing   mb Bookmark current directory   mc Copy marked files to marked-file target directory   md Apply diff to marked files (up to 3)   me Place marked files on arg list and edit them   mf Mark a file   mh Toggle marked file suffices\u0026rsquo; presence on hiding list   mm Move marked files to marked-file target directory   mp Print marked files   mr Mark files satisfying a shell-style   mt Current browsing directory becomes markfile target   mT Apply ctags to marked files   mu Unmark all marked files   mx Apply arbitrary shell command to marked files   mz Compress/decompress marked files   o Enter the file/directory under the cursor in a new browser window. A horizontal split is used.   O Obtain a file specified by cursor   p Preview the file   P Browse in the previously used window   qb List bookmarked directories and history   qf Display information on file   r Reverse sorting order   R Rename the designed file(s)/directory(ies)   s Select sorting style: by name, time or file size   S Specify suffix priority for name-sorting   t Enter the file/directory under the cursor in a new tab   u Change to recently-visited directory   U Change to subsequently-visited directory   v Enter the file/directory under the cursor in a new browser window. A vertical split is used.   x View file with an associated program   X Execute filename under cursor via   % Open a new file in netrw\u0026rsquo;s current directory     The file browser\nDid you know Vim also has a file browser called Netrw? You can access it by defining a directory instead of a file, for example:\nOn the command line vim /path/to/directory/\nIn Vim command mode :e /path/to/directory/ Of course there are the obvious keys you might need, for example:\nThe cursor (or hjkl) keys to browse through the list The return key to enter a directory or open the file But did you know about these:\n– will browse up one dir i will change the browser style I will hide the header D will delete a file (confirmation required) R will rename a file s will change the sorting (name, time, size, exten) r will revert the sorting I really like the collapsing tree browsing style (I think it’s #4). You can access it by pressing i 3 times (by default).\nIn this blog post, I’d like to show you how to use Vim to open and edit multiple files. Use the right techniques and you’ll be even more productive in handling multiple files at the same time.\nThis is the follow up of Mastering Vim: Opening files.\nOpening multiple files\nOpening multiple files in vim is straight forward. Just append all the filenames as CLI args and you’re ready to go:\nvim /path/to/file1 /path/to/file2 /path/to/file3 With the Vim opened, you can now see the first file.\nTo jump between the files you can use the following vim commands:\n:n(ext) # jumps to the next file :prev # jumps to the previous file Easy, isn’t it? But now you can’t really see what files are available for editing, right? Just keep on reading and learn more about tabs.\nUsing tabs\nVim is awesome, and because of that it is also supporting tabs out of the box – at least since Vim 7.0.\nSo let’s stick to the last example, but this time we want to open the 3 files in separate tabs by using the -p CLI flag:\nvim -p /path/to/file1 /path/to/file2 /path/to/file3 Vim is launched as before, but this time all files will be opened in tabs instead of hidden buffers. The tab bar is displayed on the top of the editor / window.\nOf course you can also open a new tab when you’re already in Vim in the normal mode:\n:tabe [/path/to/file] (command-line command) Interfer with tabs by staying in normal mode and using the following commands / keystrokes:\nJumping to the next tab is either gt (normal mode command) or :tabn[ext] (command-line command) Jumping to the previous tab is either gT (normal mode command) or :tabp[revious] (command-line command) Jumping to a specific tab is ngt (normal mode command), where n is the tab index starting by 1 Closing the current tab is :tabc[lose] (command-line command) Looks even more promising. But you still might ask yourself how you can edit multiple files in the same window, right? Let’s see that!\nSplitting the window\nOf course vim can also display multiple files in one single window / workspace. Just use the integrated split feature of Vim.\nTo split the window you can use one of the following command-line commands in Vim:\n:sp[lit] [/path/to/file] # splits the window horizontally [and opens the file] :vs[plit] [/path/to/file] # splits the window vertically [and opens the file] Now you’ve multiple windows open in Vim. Just see them as “multiple Vim’s” aligned in a single terminal window.\nHandling the windows can be tricky, but you’ll get used to it after a short time 😉 Just stay in the normal mode and use the following commands / keystrokes:\nJumping between windows is Ctrl-w \u0026lt;cursor keys\u0026gt;, Ctrl-w [hjkl], or Ctrl-w Ctrl-[hjkl] Jumping to the next window is Ctrl-w w or Ctrl-w Ctrl-w Jumping to the previous window is Ctrl-w W Jumping to the last accessed window is Ctrl-w p or Ctrl-w Ctrl-p Closing the current window is Ctrl-w c or :clo[se] Make the current window the only one and close all other ones is Ctrl-w o or :on[ly] Tabs, windows and workspaces\nNow as you know windows \u0026amp; tabs, please note the following.\nTabs are not classic “file tabs” as in most editors. Instead of it, tabs are like workspaces or window layouts. By default, each tab has exactly one window, and each window has exactly one file. It looks a bit like this:\nVim editor -\u0026gt; Tab(s) -\u0026gt; Window(s) -\u0026gt; File Tabs are our workspaces, and you can easily split the window within the tabs, which means you can have multiple windows in a single tab. So a tab can “host” one or more windows, but not the other way around! Each tab is responsible for its own workspace / window layout.\nTo display the contents, windows and tabs simply use the following command-line command:\n:tabs Using the mouse\nNow, remembering all those keystrokes can be tricky and moving around in windows \u0026amp; tabs can be frustrating in the beginning. Though, if your terminal has integrated mouse support, then you might be able to use the mouse instead of the commands. Just activate the mouse support first:\n:set mouse=a After that you should be able to change windows and/or tabs via mouse click. If it doesn’t work, make sure your terminal has mouse support and it’s activated.\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-fzf/",
        "title": "vim cheat sheet",
        "content": "FZF syntax Let\u0026rsquo;s go over syntax so we can search more efficiently. Fortunately for us, there aren\u0026rsquo;t many to learn.\n^ is a prefix exact match. To search for phrase starting with \u0026ldquo;welcome\u0026rdquo;, we do ^welcome. $ is a suffix exact match. To search for phrase ending with \u0026ldquo;my friends\u0026rdquo;, we do friends$. ' is an exact match. To search for phrase \u0026ldquo;welcome my friends\u0026rdquo;, we do \u0026lsquo;welcome my friends. | is an \u0026ldquo;or\u0026rdquo; match. To search for either \u0026ldquo;friends\u0026rdquo; or \u0026ldquo;foes\u0026rdquo;, we can use friends | foes. ! is an inverse match. To search for phrase containing \u0026ldquo;welcome\u0026rdquo; and not \u0026ldquo;friends\u0026rdquo;, we can use welcome !friends We can mix and match the above. For example, ^hello | ^welcome friends$ searches for phrase starting with either \u0026ldquo;welcome\u0026rdquo; or \u0026ldquo;hello\u0026rdquo; and ending with \u0026ldquo;friends\u0026rdquo;.\nhttps://dev.to/iggredible/how-to-search-faster-in-vim-with-fzf-vim-36ko\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-generelt/",
        "title": "vim cheat sheet",
        "content": "Kommandoer Generelt :set nu linjenummer til\n:set nu! linjenummer fra\nBevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.\n\u0026lt;antal\u0026gt;[retning og objekt] Tegn h tegn tilbage\nl tegn frem\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nCharacter Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line. Meanwhile, F will move backwards. A numerical count argument can also be supplied, so 2f: will go to the second occurrence of : after the current cursor position. To move before the matching character, t and T can be used. The last ftFT can be repeated by pressing ;.\nLinjer k linje op\nj linje ned\ngg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\neller gg\nOrd b til start af ord og hvis allerede i starten af ordet så til start af forrige ord.\nw til start af næste ord eller til punktuation.\ne til slut af ord eller slut af næsten ord hvios allerede ved slut - stopper også ved punktution.\nge til slutningen af forrige ord. Stopper også ved punktuation.\nTyping E, W, or B will perform a similar operation, but won\u0026rsquo;t count symbols or punctuation as separate words.\nSætninger ) Til start af næste sætning.\n( Til start af denne, hvis allered epå start så start af forrige.\nAfsnit } Afsnit frem.\n{ Afsnit ilbage.\nSøgning Søgning åbner i kommandolinjen og kræver derfor retur for at udføre.\n/[søgeord] går til første sted\n2/[søgeord] d/rails - delete up until the first search match for “rails”\ngår direkte til andet sted søgeordet forekommer\n/ - search for any word in the file n - repeat last search N - repeat last search in opposite direction\nf - (f)ind a character forward in a line and move to it T - find a character backward in a line and move un(t)il it\nt - find a character forward in a line and move un(t)il it (one character before) F - (f)ind a character backward in a line and move to it\nSkærm Bevæggelser relativt til det synlige område i vinduet:\nScreen Positioning In command mode, I often find myself scrolling the screen by half increments using ctrl u and ctrl d. The equivalent full screen commands are ctrl f and ctrl b. Page up and page down may also work depending on your configuration. Pressing z and then return will move the current line to the top of the screen. A number will move that line number to the top of the screen, so pressing 50z and then return will make the top of the screen start at line 50. Conversely, z. will move the current line to the centre of the screen, and z- will move to the bottom. To move within a screen without scrolling it, H is useful because it\u0026rsquo;ll move the cursor to the top line. M shifts it to the middle, and then L moves it to the last line.\nTekstobjekter Når jeg redigerer almindelige tekster, jeg bruger ikke vim til programmering, så er tekstobjekter enormt effektive fordi de tillader hurtigt redigering af ord, sætninger og afsnit uden at cursoren skal placeres i starten af ord, sætninger eller afsnit for at lave en hanlding på hele dette \u0026ldquo;tekstobjekt\u0026rdquo;.\nKræver en handling.\na eller i skal anngives.\n\u0026lt;antal\u0026gt;[handlingyi][i||a][tekstobjekt] hvis antal ikke angives antages 1.\nMotion Commands vs. Text Objects Commands A command using a motion, e.g., cw, operates from the current cursor position. A command using a text-object, e.g., ciw operates on the whole object regardless of the cursor position. We saw this behavior in each of the various plaintext text objects. Although this requires one more character, it saves you the time and effort of moving the cursor into the “right” position.\nhttps://blog.carbonfive.com/vim-text-objects-the-definitive-guide/\nUsing Text Objects You can think of text objects as a kind of “noun” that can be used in place of motions to define a range of text from anywhere within it. Let’s look at some examples:\niw, aw - inner word, a word ip, ap - inner paragraph, a paragraph i), ap - inner parenthesis, a parenthesis i\u0026rsquo;, a\u0026rsquo; - inner single quote i\u0026rdquo;, a\u0026rdquo; - inner double quote it, at - inner tag, a tag Check out this blogpost for a nice rundown of the different text objects available and practical examples.\nYou can also get a full listing from within Vim by typing :h text-objects.\nOrd daw sletter et ord inklusive efterfølgende mellemrum. I modsætning til dw er det ligegyldigt hvor i ordet cursoren befinder sig.\ndiw sletter et ord eksklusive efterfølgende mellemrum.\nSætning das sletter en sætning inklusive efterfølgende mellemrum.\ndis sletter en sætning eksklusive efterfølgende mellemrum.\nAfsnit das sletter et afsnit iklusive efterfølgende mellemrum.\ndis sletter et afsnit eksklusive efterfølgende mellemrum.\nThe operator either affects whole lines, or the characters between the start and end position. Generally, motions that move between lines affect lines (are linewise), and motions that move within a line affect characters (are characterwise). However, there are some exceptions.\nDer.\nFlytte rundt gg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nTekstmanipulation ciw cw das slet en sætning\ndap slet et afsnit\n 1 \u0026quot;This first word should overwrite the second\u0026quot; yiw yank inner word (copy word under cursor, say \u0026quot;first\u0026quot;). ... Move the cursor to another word (say \u0026quot;second\u0026quot;). viwp select \u0026quot;second\u0026quot;, then replace it with \u0026quot;first\u0026quot;. [antal] handling [antal] objekt antal = 1 med mindre andet er angivet.\nautocompletion (usingCTRL-pandCTRL-n),\nhttps://www.linux.com/training-tutorials/using-spell-checking-vim/\n:set lbr :set spell spelllang=da To delete_blank lines_in vim (empty lines), use this vim command in “last line mode”:\n:g/^$/d  "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-handlinger/",
        "title": "vim cheat sheet",
        "content": "(subjektobjekt)\n2d2w = 4dw = d4w\n2d2w = 4d1w = 1d4w\nFor at arbejde effektivt, hurtigt og kreativt, så foretrækker jeg at splitte skriveproces og redigeringsproces op.\nDerfor er jeg gladd for at vim har to modes som passer til det worflow. Og når jeg reidgerer vil jeg helst blive i normal mode.\nBlive i normal  r - i normal-mode udskift (replace) et tegn under cursoren uden at skifte til insert\n Gå i erstat-mode R\nSlet BEMærk at slet også kopierer over i default registeret\nd - Deletes highlighted text\ndd - Deletes a line of text\nAndet dG\nyy - Copies a line\nyw - Copies a word\ny$ - Copies from where your cursor is to the end of a line\nv - Highlight one character at a time using arrow buttons or the h, k, j, l buttons\nV - Highlights one line, and movement keys can allow you to highlight additional lines\np - put ind Paste whatever has been copied to the unnamed register\ndw - Deletes a word\nde - som dw men tager ikke efterfølgende mellemrum med væk\nD - Deletes everything from where your cursor is to the end of the line\nd0 - Deletes everything from where your cursor is to the beginning of the line\ndgg - Deletes everything from where your cursor is to the beginning of the file\ndG - Deletes everything from where your cursor is to the end of the file\nx - Deletes a single character under cursoren delete X - sletter et tegn til venstre for cursoren backspace\nu - Undo the last operation; u# allows you to undo multiple actions\nCtrl + r - Redo the last undo\n. - Repeats the last action\nFra normal til insert  a = efter cursoren og insert\nA = efter slutningen af linjen og insert\nce = sletter fra og med cursor og resten af ordet\ncc = sletter hele linjen og går i insert\nC slet fra cursor og resten af linjen og gå i insert\ni\nI starten af linjen og insert\no ny linje under\nO ny linje over\ns slet tegn og gå i insert\n "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-intro/",
        "title": "vim cheat sheet",
        "content": "Kommandoer Generelt :set nu linjenummer til\n:set nu! linjenummer fra\nBevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.\n\u0026lt;antal\u0026gt;[retning og objekt] Tegn h tegn tilbage\nl tegn frem\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nCharacter Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line. Meanwhile, F will move backwards. A numerical count argument can also be supplied, so 2f: will go to the second occurrence of : after the current cursor position. To move before the matching character, t and T can be used. The last ftFT can be repeated by pressing ;.\nLinjer k linje op\nj linje ned\ngg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\neller gg\nOrd b til start af ord og hvis allerede i starten af ordet så til start af forrige ord.\nw til start af næste ord eller til punktuation.\ne til slut af ord eller slut af næsten ord hvios allerede ved slut - stopper også ved punktution.\nge til slutningen af forrige ord. Stopper også ved punktuation.\nTyping E, W, or B will perform a similar operation, but won\u0026rsquo;t count symbols or punctuation as separate words.\nSætninger ) Til start af næste sætning.\n( Til start af denne, hvis allered epå start så start af forrige.\nAfsnit } Afsnit frem.\n{ Afsnit ilbage.\nSøgning Søgning åbner i kommandolinjen og kræver derfor retur for at udføre.\n/[søgeord] går til første sted\n2/[søgeord] d/rails - delete up until the first search match for “rails”\ngår direkte til andet sted søgeordet forekommer\n/ - search for any word in the file n - repeat last search N - repeat last search in opposite direction\nf - (f)ind a character forward in a line and move to it T - find a character backward in a line and move un(t)il it\nt - find a character forward in a line and move un(t)il it (one character before) F - (f)ind a character backward in a line and move to it\nSkærm Bevæggelser relativt til det synlige område i vinduet:\nScreen Positioning In command mode, I often find myself scrolling the screen by half increments using ctrl u and ctrl d. The equivalent full screen commands are ctrl f and ctrl b. Page up and page down may also work depending on your configuration. Pressing z and then return will move the current line to the top of the screen. A number will move that line number to the top of the screen, so pressing 50z and then return will make the top of the screen start at line 50. Conversely, z. will move the current line to the centre of the screen, and z- will move to the bottom. To move within a screen without scrolling it, H is useful because it\u0026rsquo;ll move the cursor to the top line. M shifts it to the middle, and then L moves it to the last line.\nTekstobjekter Når jeg redigerer almindelige tekster, jeg bruger ikke vim til programmering, så er tekstobjekter enormt effektive fordi de tillader hurtigt redigering af ord, sætninger og afsnit uden at cursoren skal placeres i starten af ord, sætninger eller afsnit for at lave en hanlding på hele dette \u0026ldquo;tekstobjekt\u0026rdquo;.\nKræver en handling.\na eller i skal anngives.\n\u0026lt;antal\u0026gt;[handlingyi][i||a][tekstobjekt] hvis antal ikke angives antages 1.\nMotion Commands vs. Text Objects Commands A command using a motion, e.g., cw, operates from the current cursor position. A command using a text-object, e.g., ciw operates on the whole object regardless of the cursor position. We saw this behavior in each of the various plaintext text objects. Although this requires one more character, it saves you the time and effort of moving the cursor into the “right” position.\nhttps://blog.carbonfive.com/vim-text-objects-the-definitive-guide/\nUsing Text Objects You can think of text objects as a kind of “noun” that can be used in place of motions to define a range of text from anywhere within it. Let’s look at some examples:\niw, aw - inner word, a word ip, ap - inner paragraph, a paragraph i), ap - inner parenthesis, a parenthesis i\u0026rsquo;, a\u0026rsquo; - inner single quote i\u0026rdquo;, a\u0026rdquo; - inner double quote it, at - inner tag, a tag Check out this blogpost for a nice rundown of the different text objects available and practical examples.\nYou can also get a full listing from within Vim by typing :h text-objects.\nOrd daw sletter et ord inklusive efterfølgende mellemrum. I modsætning til dw er det ligegyldigt hvor i ordet cursoren befinder sig.\ndiw sletter et ord eksklusive efterfølgende mellemrum.\nSætning das sletter en sætning inklusive efterfølgende mellemrum.\ndis sletter en sætning eksklusive efterfølgende mellemrum.\nAfsnit das sletter et afsnit iklusive efterfølgende mellemrum.\ndis sletter et afsnit eksklusive efterfølgende mellemrum.\nThe operator either affects whole lines, or the characters between the start and end position. Generally, motions that move between lines affect lines (are linewise), and motions that move within a line affect characters (are characterwise). However, there are some exceptions.\nDer.\nFlytte rundt gg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nTekstmanipulation ciw cw das slet en sætning\ndap slet et afsnit\n 1 \u0026quot;This first word should overwrite the second\u0026quot; yiw yank inner word (copy word under cursor, say \u0026quot;first\u0026quot;). ... Move the cursor to another word (say \u0026quot;second\u0026quot;). viwp select \u0026quot;second\u0026quot;, then replace it with \u0026quot;first\u0026quot;. [antal] handling [antal] objekt antal = 1 med mindre andet er angivet.\nautocompletion (usingCTRL-pandCTRL-n),\nhttps://www.linux.com/training-tutorials/using-spell-checking-vim/\n:set lbr :set spell spelllang=da To delete_blank lines_in vim (empty lines), use this vim command in “last line mode”:\n:g/^$/d  "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-kommando/",
        "title": "vim cheat sheet",
        "content": ":vnew | r ! pdt # :w! temp.html | silent !open /Applications/Safari.app % "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-motions/",
        "title": "vim cheat sheet",
        "content": "If you type A after G you will enter insert mode at the end of the last line.\nIf you just want to go to the last character, then G-End will suffice\nExchange https://github.com/tommcdo/vim-exchange\nVirker også på tekstobjekter\nTranspose two characters In Emacs, you have C-t (transpose-chars) which transposes the two characters before the cursor, for instance to turn normla into normal. The equivalent keypress in Vim is xp (or Xp, depending on cursor position): Delete a character and put it after the following character.\nt = til\nfx ctf = sletter indtil første f i linjen og sætter i insert.\nT går den anden vej\nf det samme men inklisive det valgte bogtav\nKommandoer Generelt :set nu linjenummer til\n:set nu! linjenummer fra\nBevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.\n\u0026lt;antal\u0026gt;[retning og objekt] Tegn h tegn tilbage\nl tegn frem\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nCharacter Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line. Meanwhile, F will move backwards. A numerical count argument can also be supplied, so 2f: will go to the second occurrence of : after the current cursor position. To move before the matching character, t and T can be used. The last ftFT can be repeated by pressing ;.\nLinjer k linje op\nj linje ned\ngg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\neller gg\nOrd b til start af ord og hvis allerede i starten af ordet så til start af forrige ord.\nw til start af næste ord eller til punktuation.\ne til slut af ord eller slut af næsten ord hvios allerede ved slut - stopper også ved punktution.\nge til slutningen af forrige ord. Stopper også ved punktuation.\nTyping E, W, or B will perform a similar operation, but won\u0026rsquo;t count symbols or punctuation as separate words.\nSætninger ) Til start af næste sætning.\n( Til start af denne, hvis allered epå start så start af forrige.\nAfsnit } Afsnit frem.\n{ Afsnit ilbage.\nSøgning Søgning åbner i kommandolinjen og kræver derfor retur for at udføre.\n/[søgeord] går til første sted\n2/[søgeord] d/rails - delete up until the first search match for “rails”\ngår direkte til andet sted søgeordet forekommer\n/ - search for any word in the file n - repeat last search N - repeat last search in opposite direction\n\u0026ldquo;inline\u0026rdquo; søgning f - (f)ind a character forward in a line and move to it T - find a character backward in a line and move un(t)il it\nt - find a character forward in a line and move un(t)il it (one character before) F - (f)ind a character backward in a line and move to\n; \u0026ldquo;Repeat latest f, t, F or T [count] times.\u0026rdquo; , Modsat retning\nI find f and t very useful in combination with d and c. For example, ct: will let you replace everything from your cursor up to the next colon, but not delete the colon. You can remember it as \u0026ldquo;change to colon\u0026rdquo;.\nI prefer vt:c because you don\u0026rsquo;t spot always spot each occurrence of a given letter 100% correct. With v you can see the visual selection, a nice visual cue\n2fx to jump to the second x on the line.\nSkærm Bevæggelser relativt til det synlige område i vinduet:\nScreen Positioning In command mode, I often find myself scrolling the screen by half increments using ctrl u and ctrl d. The equivalent full screen commands are ctrl f and ctrl b. Page up and page down may also work depending on your configuration. Pressing z and then return will move the current line to the top of the screen. A number will move that line number to the top of the screen, so pressing 50z and then return will make the top of the screen start at line 50. Conversely, z. will move the current line to the centre of the screen, and z- will move to the bottom. To move within a screen without scrolling it, H is useful because it\u0026rsquo;ll move the cursor to the top line. M shifts it to the middle, and then L moves it to the last line.\nClick ‘zz’ to recenter the page so that your cursor is at the center\nz.\tCenter the screen on the cursor zt\tScroll the screen so the cursor is at the top zb\tScroll the screen so the cursor is at the bottom\nScreen Positioning In command mode, I often find myself scrolling the screen by half increments using ctrl u and ctrl d. The equivalent full screen commands are ctrl f and ctrl b. Page up and page down may also work depending on your configuration. Pressing z and then return will move the current line to the top of the screen. A number will move that line number to the top of the screen, so pressing 50z and then return will make the top of the screen start at line 50. Conversely, z. will move the current line to the centre of the screen, and z- will move to the bottom. To move within a screen without scrolling it, H is useful because it\u0026rsquo;ll move the cursor to the top line. M shifts it to the middle, and then L moves it to the last line. All of these commands are easy to remember with some simple mnemonics: up down forward back Home Middle Last Word Movement To move to the end of the next word, use e. The opposite is b, which moves backwards a word. The w command also moves forwards, but leaves the cursor at the start of the word. Typing E, W, or B will perform a similar operation, but won\u0026rsquo;t count symbols or punctuation as separate words. When I\u0026rsquo;m programming I find myself using these versions.\nTekstobjekter Når jeg redigerer almindelige tekster, jeg bruger ikke vim til programmering, så er tekstobjekter enormt effektive fordi de tillader hurtigt redigering af ord, sætninger og afsnit uden at cursoren skal placeres i starten af ord, sætninger eller afsnit for at lave en hanlding på hele dette \u0026ldquo;tekstobjekt\u0026rdquo;.\nKræver en handling.\na eller i skal anngives.\n\u0026lt;antal\u0026gt;[handlingyi][i||a][tekstobjekt] hvis antal ikke angives antages 1.\nMotion Commands vs. Text Objects Commands A command using a motion, e.g., cw, operates from the current cursor position. A command using a text-object, e.g., ciw operates on the whole object regardless of the cursor position. We saw this behavior in each of the various plaintext text objects. Although this requires one more character, it saves you the time and effort of moving the cursor into the “right” position.\nhttps://blog.carbonfive.com/vim-text-objects-the-definitive-guide/\nUsing Text Objects You can think of text objects as a kind of “noun” that can be used in place of motions to define a range of text from anywhere within it. Let’s look at some examples:\niw, aw - inner word, a word ip, ap - inner paragraph, a paragraph i), ap - inner parenthesis, a parenthesis i\u0026rsquo;, a\u0026rsquo; - inner single quote i\u0026rdquo;, a\u0026rdquo; - inner double quote it, at - inner tag, a tag Check out this blogpost for a nice rundown of the different text objects available and practical examples.\nYou can also get a full listing from within Vim by typing :h text-objects.\nOrd daw sletter et ord inklusive efterfølgende mellemrum. I modsætning til dw er det ligegyldigt hvor i ordet cursoren befinder sig.\ndiw sletter et ord eksklusive efterfølgende mellemrum.\nSætning das sletter en sætning inklusive efterfølgende mellemrum.\ndis sletter en sætning eksklusive efterfølgende mellemrum.\nAfsnit das sletter et afsnit iklusive efterfølgende mellemrum.\ndis sletter et afsnit eksklusive efterfølgende mellemrum.\nThe operator either affects whole lines, or the characters between the start and end position. Generally, motions that move between lines affect lines (are linewise), and motions that move within a line affect characters (are characterwise). However, there are some exceptions.\nDer.\nFlytte rundt gg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nÆndringer I normal-mode går ctrl+r+tal til seneste ændring, hvor 0 er seneste 1 er næstseneste etc.\nTekstmanipulation ciw cw das slet en sætning\ndap slet et afsnit\n 1 \u0026quot;This first word should overwrite the second\u0026quot; yiw yank inner word (copy word under cursor, say \u0026quot;first\u0026quot;). ... Move the cursor to another word (say \u0026quot;second\u0026quot;). viwp select \u0026quot;second\u0026quot;, then replace it with \u0026quot;first\u0026quot;. [antal] handling [antal] objekt antal = 1 med mindre andet er angivet.\nautocompletion (usingCTRL-pandCTRL-n),\nhttps://www.linux.com/training-tutorials/using-spell-checking-vim/\n:set lbr :set spell spelllang=da To delete_blank lines_in vim (empty lines), use this vim command in “last line mode”:\n:g/^$/d  "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-multiple/",
        "title": "vim cheat sheet",
        "content": ":bn - Switch to next buffer\n:bp - Switch to previous buffer\n:bd - Close a buffer\n:sp [filename] - Opens a new file and splits your screen horizontally to show more than one buffer\n:vsp [filename] - Opens a new file and splits your screen vertically to show more than one buffer\n:ls - Lists all open buffers\nCtrl + ws - Split windows horizontally\nCtrl + wv - Split windows vertically\nCtrl + ww - Switch between windows\nCtrl + wq - Quit a window\nCtrl + wh - Moves your cursor to the window to the left\nCtrl + wl - Moves your cursor to the window to the right\nCtrl + wj - Moves your cursor to the window below the one you\u0026rsquo;re in\nCtrl + wk - Moves your cursor to the window above the one you\u0026rsquo;re in\nJust like any browser, you can also use tabs within Vim. This makes it incredibly easy to switch between multiple files while you\u0026rsquo;re making some code changes instead of working in one single file, closing it, and opening a new one. Below are some useful Vim commands for using tab pages:\n:tabedit file - opens a new tab and will take you to edit \u0026ldquo;file\u0026rdquo;\ngt - move to the next tab\ngT - move to the previous tab\n#gt - move to a specific tab number (e.g. 2gt takes you to the second tab)\n:tabs - list all open tabs\n:tabclose - close a single tab\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-redigering/",
        "title": "vim cheat sheet",
        "content": "Kommandoer som J for join. For eksempel 4J for at samle fire linjer til at afsnit. Det kan man spare meget tid med. ( og ) flytter frem og tilbage i sætninger som på den måde kan splittes også vis og vas kan bruges. Specifikt vasA-slet-retur.\nThus: :.,$j meaning \u0026ldquo;from the current line to the last line, join them all into one line\u0026rdquo;. :% is synonymous with :1,$ (all the lines).\nf. er også en hurtig med at springe frem til næste punktum i linjen - og dermed typisk slutningen på en sætning. Så\no hurtig måde at indsætte linje og gå i insert efter linjer stort O hurtigt indsætte og gå i insert før.\nEn hurtig måde at fjerne en sætning på midt i et afsnit er (c) - med kan der skrives en ny. Hurtigere er dog nok tekstobjekter - fx. cas hvis der skal sættes noget andet ind i sætningens sted. Hvis den bare skal slettes så das.\nJeg bruger ofte slutningen af filen til at opbevare ting som endnu ikke er indarbejdet rigtigt i teksten. Det kan jeg lynhrtiggt hoppe ned til med G. Og så tilbage ti seneste sted inden med ctrl-o\nThe quickest way is to hit either:\n'\u0026rsquo;\n(two apostrophes) or:\n``\n(two backticks). Note that the difference is that the backtick goes to the same location on the line, whereas the apostrophe goes to the start of the line. On a UK keyboard, the apostrophe is more accessible, so I tend to use that one.\nou can also use g; and g, to move backward and forward in your edit locations.\n'\u0026rsquo; or `` switch between the last position and the current position. CtrlI and CtrlO work through the jump list history.\ng; and g, move through edit positions, which are also very frequently used.\njumplist If you want j and k to be added to the jump list, you can do so using a mark. Reddit user PlayMeWhile provided the following solution. Add this to your .vimrc and CTRL-o and i will work as expected. Image for post Add this in your .vimrc\nRegister Marks I\u0026rsquo;ve always done by it setting a mark.\nIn command-mode, press m[letter]. For example, ma sets a mark at the current line using a as the mark identifier.\nTo get back to the mark press ' [letter]. For example, \u0026lsquo;a takes you back to the line mark set in step 1. To get back to the column position of the row where you marked the line, use `a (back-tick [letter]).\nTo see all of the marks that currently set, type :marks.\nOn a slightly unrelated note, I just discovered another nifty thing about marks.\nLet\u0026rsquo;s say you jump to mark b by doing mb. Vim automatically sets the mark ' (that\u0026rsquo;s a single-quote) to be whichever line you were on before jumping to mark b.\nThat means you can do \u0026lsquo;b to jump to that mark, then do '\u0026rsquo; (2 single-quotes) to jump back to wherever you were before.\nI discovered this accidentally using the :marks command, which shows a list of all marks.\naction\t/re\t… search to string expression re ?re\t… search backwards to string expression re n\t… next result N\t… previous result\n … search for word under cursor  … search backwards for word under cursor gd\tgo to 1st occurence of word under cursor %\tjump to end of matching brackets (or meta-tags – requires match-it plugin)\naction\tzO\topen all nested folds zr\topen highest level fold zR\topen all folds of all levels zc\tclose all folds zm\tclose all highest level of open folds zM\tclose all folds of all levels space\ttoggle current fold level\nDelete in insert mode To delete a character, word or line while in Insert mode, Vim Command Line mode or Shell Command Line we have the following shortcuts available:   \u0026quot; delete back one character (backspace)  \u0026quot; delete back one word  \u0026quot; delete back to start of line  \u0026quot; delete forward to end of line\n Pad\nVIM\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-tekstobjekter/",
        "title": "vim cheat sheet",
        "content": "Exchange https://github.com/tommcdo/vim-exchange\nVirker også på tekstobjekter\nKommandoer Generelt :set nu linjenummer til\n:set nu! linjenummer fra\nBevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.\n\u0026lt;antal\u0026gt;[retning og objekt] Tegn h tegn tilbage\nl tegn frem\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nCharacter Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line. Meanwhile, F will move backwards. A numerical count argument can also be supplied, so 2f: will go to the second occurrence of : after the current cursor position. To move before the matching character, t and T can be used. The last ftFT can be repeated by pressing ;.\nLinjer k linje op\nj linje ned\ngg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\neller gg\nOrd b til start af ord og hvis allerede i starten af ordet så til start af forrige ord.\nw til start af næste ord eller til punktuation.\ne til slut af ord eller slut af næsten ord hvios allerede ved slut - stopper også ved punktution.\nge til slutningen af forrige ord. Stopper også ved punktuation.\nTyping E, W, or B will perform a similar operation, but won\u0026rsquo;t count symbols or punctuation as separate words.\nSætninger ) Til start af næste sætning.\n( Til start af denne, hvis allered epå start så start af forrige.\nAfsnit } Afsnit frem.\n{ Afsnit ilbage.\nSøgning Søgning åbner i kommandolinjen og kræver derfor retur for at udføre.\n/[søgeord] går til første sted\n2/[søgeord] d/rails - delete up until the first search match for “rails”\ngår direkte til andet sted søgeordet forekommer\n/ - search for any word in the file n - repeat last search N - repeat last search in opposite direction\nf - (f)ind a character forward in a line and move to it T - find a character backward in a line and move un(t)il it\nt - find a character forward in a line and move un(t)il it (one character before) F - (f)ind a character backward in a line and move to it\nSkærm Bevæggelser relativt til det synlige område i vinduet:\nScreen Positioning In command mode, I often find myself scrolling the screen by half increments using ctrl u and ctrl d. The equivalent full screen commands are ctrl f and ctrl b. Page up and page down may also work depending on your configuration. Pressing z and then return will move the current line to the top of the screen. A number will move that line number to the top of the screen, so pressing 50z and then return will make the top of the screen start at line 50. Conversely, z. will move the current line to the centre of the screen, and z- will move to the bottom. To move within a screen without scrolling it, H is useful because it\u0026rsquo;ll move the cursor to the top line. M shifts it to the middle, and then L moves it to the last line.\nTekstobjekter Når jeg redigerer almindelige tekster, jeg bruger ikke vim til programmering, så er tekstobjekter enormt effektive fordi de tillader hurtigt redigering af ord, sætninger og afsnit uden at cursoren skal placeres i starten af ord, sætninger eller afsnit for at lave en hanlding på hele dette \u0026ldquo;tekstobjekt\u0026rdquo;.\nKræver en handling.\na eller i skal anngives.\n\u0026lt;antal\u0026gt;[handlingyi][i||a][tekstobjekt] hvis antal ikke angives antages 1.\nMotion Commands vs. Text Objects Commands A command using a motion, e.g., cw, operates from the current cursor position. A command using a text-object, e.g., ciw operates on the whole object regardless of the cursor position. We saw this behavior in each of the various plaintext text objects. Although this requires one more character, it saves you the time and effort of moving the cursor into the “right” position.\nhttps://blog.carbonfive.com/vim-text-objects-the-definitive-guide/\nUsing Text Objects You can think of text objects as a kind of “noun” that can be used in place of motions to define a range of text from anywhere within it. Let’s look at some examples:\niw, aw - inner word, a word ip, ap - inner paragraph, a paragraph i), ap - inner parenthesis, a parenthesis i\u0026rsquo;, a\u0026rsquo; - inner single quote i\u0026rdquo;, a\u0026rdquo; - inner double quote it, at - inner tag, a tag Check out this blogpost for a nice rundown of the different text objects available and practical examples.\nYou can also get a full listing from within Vim by typing :h text-objects.\nOrd daw sletter et ord inklusive efterfølgende mellemrum. I modsætning til dw er det ligegyldigt hvor i ordet cursoren befinder sig.\ndiw sletter et ord eksklusive efterfølgende mellemrum.\nSætning das sletter en sætning inklusive efterfølgende mellemrum.\ndis sletter en sætning eksklusive efterfølgende mellemrum.\nAfsnit das sletter et afsnit iklusive efterfølgende mellemrum.\ndis sletter et afsnit eksklusive efterfølgende mellemrum.\nThe operator either affects whole lines, or the characters between the start and end position. Generally, motions that move between lines affect lines (are linewise), and motions that move within a line affect characters (are characterwise). However, there are some exceptions.\nDer.\nFlytte rundt gg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nTekstmanipulation ciw cw das slet en sætning\ndap slet et afsnit\n 1 \u0026quot;This first word should overwrite the second\u0026quot; yiw yank inner word (copy word under cursor, say \u0026quot;first\u0026quot;). ... Move the cursor to another word (say \u0026quot;second\u0026quot;). viwp select \u0026quot;second\u0026quot;, then replace it with \u0026quot;first\u0026quot;. [antal] handling [antal] objekt antal = 1 med mindre andet er angivet.\nautocompletion (usingCTRL-pandCTRL-n),\nhttps://www.linux.com/training-tutorials/using-spell-checking-vim/\n:set lbr :set spell spelllang=da To delete_blank lines_in vim (empty lines), use this vim command in “last line mode”:\n:g/^$/d  "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-tips-tricks/",
        "title": "vim cheat sheet",
        "content": " i  for example: 12ia will insert 12 a\u0026rsquo;s. share follow answered Apr 27 \u0026lsquo;11 at 13:53\nqed 18.9k1616 gold badges9292 silver badges152152 bronze badges 8 This is the exact sequence of commands the OP wanted to avoid. – Kenny Evitt Sep 3 \u0026lsquo;15 at 19:26 add a comment\n17\nThrough single repeat:\nInsert mode Esc 80.\nKommandoer Generelt :set nu linjenummer til\n:set nu! linjenummer fra\nBevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.\n\u0026lt;antal\u0026gt;[retning og objekt] Tegn h tegn tilbage\nl tegn frem\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nCharacter Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line. Meanwhile, F will move backwards. A numerical count argument can also be supplied, so 2f: will go to the second occurrence of : after the current cursor position. To move before the matching character, t and T can be used. The last ftFT can be repeated by pressing ;.\nLinjer k linje op\nj linje ned\ngg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\neller gg\nOrd b til start af ord og hvis allerede i starten af ordet så til start af forrige ord.\nw til start af næste ord eller til punktuation.\ne til slut af ord eller slut af næsten ord hvios allerede ved slut - stopper også ved punktution.\nge til slutningen af forrige ord. Stopper også ved punktuation.\nTyping E, W, or B will perform a similar operation, but won\u0026rsquo;t count symbols or punctuation as separate words.\nSætninger ) Til start af næste sætning.\n( Til start af denne, hvis allered epå start så start af forrige.\nAfsnit } Afsnit frem.\n{ Afsnit ilbage.\nSøgning Søgning åbner i kommandolinjen og kræver derfor retur for at udføre.\n/[søgeord] går til første sted\n2/[søgeord] d/rails - delete up until the first search match for “rails”\ngår direkte til andet sted søgeordet forekommer\n/ - search for any word in the file n - repeat last search N - repeat last search in opposite direction\nf - (f)ind a character forward in a line and move to it T - find a character backward in a line and move un(t)il it\nt - find a character forward in a line and move un(t)il it (one character before) F - (f)ind a character backward in a line and move to it\nSkærm Bevæggelser relativt til det synlige område i vinduet:\nScreen Positioning In command mode, I often find myself scrolling the screen by half increments using ctrl u and ctrl d. The equivalent full screen commands are ctrl f and ctrl b. Page up and page down may also work depending on your configuration. Pressing z and then return will move the current line to the top of the screen. A number will move that line number to the top of the screen, so pressing 50z and then return will make the top of the screen start at line 50. Conversely, z. will move the current line to the centre of the screen, and z- will move to the bottom. To move within a screen without scrolling it, H is useful because it\u0026rsquo;ll move the cursor to the top line. M shifts it to the middle, and then L moves it to the last line.\nTekstobjekter Når jeg redigerer almindelige tekster, jeg bruger ikke vim til programmering, så er tekstobjekter enormt effektive fordi de tillader hurtigt redigering af ord, sætninger og afsnit uden at cursoren skal placeres i starten af ord, sætninger eller afsnit for at lave en hanlding på hele dette \u0026ldquo;tekstobjekt\u0026rdquo;.\nKræver en handling.\na eller i skal anngives.\n\u0026lt;antal\u0026gt;[handlingyi][i||a][tekstobjekt] hvis antal ikke angives antages 1.\nMotion Commands vs. Text Objects Commands A command using a motion, e.g., cw, operates from the current cursor position. A command using a text-object, e.g., ciw operates on the whole object regardless of the cursor position. We saw this behavior in each of the various plaintext text objects. Although this requires one more character, it saves you the time and effort of moving the cursor into the “right” position.\nhttps://blog.carbonfive.com/vim-text-objects-the-definitive-guide/\nUsing Text Objects You can think of text objects as a kind of “noun” that can be used in place of motions to define a range of text from anywhere within it. Let’s look at some examples:\niw, aw - inner word, a word ip, ap - inner paragraph, a paragraph i), ap - inner parenthesis, a parenthesis i\u0026rsquo;, a\u0026rsquo; - inner single quote i\u0026rdquo;, a\u0026rdquo; - inner double quote it, at - inner tag, a tag Check out this blogpost for a nice rundown of the different text objects available and practical examples.\nYou can also get a full listing from within Vim by typing :h text-objects.\nOrd daw sletter et ord inklusive efterfølgende mellemrum. I modsætning til dw er det ligegyldigt hvor i ordet cursoren befinder sig.\ndiw sletter et ord eksklusive efterfølgende mellemrum.\nSætning das sletter en sætning inklusive efterfølgende mellemrum.\ndis sletter en sætning eksklusive efterfølgende mellemrum.\nAfsnit das sletter et afsnit iklusive efterfølgende mellemrum.\ndis sletter et afsnit eksklusive efterfølgende mellemrum.\nThe operator either affects whole lines, or the characters between the start and end position. Generally, motions that move between lines affect lines (are linewise), and motions that move within a line affect characters (are characterwise). However, there are some exceptions.\nDer.\nFlytte rundt gg eller 1G gå tilbegyndelse af tekst\nG gå til slutningen af teksten\n\u0026lt;tal\u0026gt;G gå til linje-\u0026lt;tal\u0026gt;\n\u0026lt;tal\u0026gt;go Absout fra start af fil\nTekstmanipulation ciw cw das slet en sætning\ndap slet et afsnit\n 1 \u0026quot;This first word should overwrite the second\u0026quot; yiw yank inner word (copy word under cursor, say \u0026quot;first\u0026quot;). ... Move the cursor to another word (say \u0026quot;second\u0026quot;). viwp select \u0026quot;second\u0026quot;, then replace it with \u0026quot;first\u0026quot;. [antal] handling [antal] objekt antal = 1 med mindre andet er angivet.\nautocompletion (usingCTRL-pandCTRL-n),\nhttps://www.linux.com/training-tutorials/using-spell-checking-vim/\n:set lbr :set spell spelllang=da To delete_blank lines_in vim (empty lines), use this vim command in “last line mode”:\n:g/^$/d  "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-visual/",
        "title": "vim cheat sheet",
        "content": "V Visual mode allows you to select a block of text in Vim. Once a block of text is selected you can use visual commands to perform actions on the selected text such as deleting it, copying it, etc.\nv - starts visual mode, you can then select a range of text, and run a command\nV - starts linewise visual mode (selects entire lines)\nCtrl + v - starts visual block mode (selects columns)\nab - a block with ()\naB - a block with {}\nib - inner block with ()\niB - inner block with {}\naw - mark a word\nEsc - exit visual mode\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-wiki/",
        "title": "vim cheat sheet",
        "content": "Vim wiki og diary VimWiki Cheatsheet [number] refers to the wiki number, set by the order in your vimrc. The default is 1.\nWiki Management [number]  ww - open wiki index file [number]  wt - open wiki index file in new tab  ws - list and select available wikis  wd - delete wiki page  wr - rename wiki page Diary management [number]  wi - open diary index file for wiki  w  i - update current diary index [number]  w  w - open today’s diary file for wiki [number]  w  t - open today’s diary file for wiki in new tab  - open previous day’s diary  - open next day’s diary Navigation  - follow/create wiki link  - follow/create wiki link in new tab  - go back to previous wiki page  - go to next link on current page  - go to previous link on current page Editing shortcuts  - toggle list item on/off = - add header level\n   remove header level       create/decorate links glm - increase indent of list item gll - decrease indent of list item gl* or gl8 - switch or insert “*” symbol gl# or gl3 - switch or insert “#” symbol gl- - switch or insert “-“ symbol gl1 - switch or insert “1.” symbol Table shortcuts  move column left  move column right  (insert mode) go down/create cell  (insert mode) go next/create cell gqq or gww reformat table Text objects ah section between 2 headings including empty trailing lines ih section between 2 headings excluding empty trailing lines a\\ table cell i\\ inner table cell ac table column ic inner table column    "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-zettelkasten/",
        "title": "vim cheat sheet",
        "content": "(subjektobjekt)\n2d2w = 4dw = d4w\n2d2w = 4d1w = 1d4w\nFor at arbejde effektivt, hurtigt og kreativt, så foretrækker jeg at splitte skriveproces og redigeringsproces op.\nDerfor er jeg gladd for at vim har to modes som passer til det worflow. Og når jeg reidgerer vil jeg helst blive i normal mode.\nBlive i normal  r - i normal-mode udskift (replace) et tegn under cursoren uden at skifte til insert\n Slet Bemærk at slet også kopierer over i default registeret\nd - Deletes highlighted text\ndd - Deletes a line of text\nAndet dG\nyy - Copies a line\nyw - Copies a word\ny$ - Copies from where your cursor is to the end of a line\nv - Highlight one character at a time using arrow buttons or the h, k, j, l buttons\nV - Highlights one line, and movement keys can allow you to highlight additional lines\np - put ind Paste whatever has been copied to the unnamed register\ndw - Deletes a word\nde - som dw men tager ikke efterfølgende mellemrum med væk\nD - Deletes everything from where your cursor is to the end of the line\nd0 - Deletes everything from where your cursor is to the beginning of the line\ndgg - Deletes everything from where your cursor is to the beginning of the file\ndG - Deletes everything from where your cursor is to the end of the file\nx - Deletes a single character under cursoren delete X - sletter et tegn til venstre for cursoren backspace\nu - Undo the last operation; u# allows you to undo multiple actions\nCtrl + r - Redo the last undo\n. - Repeats the last action\nFra normal til insert  ce = sletter fra og med cursor og resten af ordet\ncc sletter hele linjen og går i inser\nC slet fra cursor og resten af linjen og gå i insert\no ny linje under\nO ny linje over\ns slet tegn og gå i insert\n "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/vim-registre/",
        "title": "vim registre",
        "content": "Jeg bruger registre til for eksempel længere navne som jeg ved jeg kommer til at skulle skrive flere gange i en tekst.\nsheet\nDer er en række danske love og en række EU-love som har til hensigt at sikre lige muligheder for kvinder og mænd.\nDisse love skal blandt andet sikre at ingen bliver diskrimineret imod på grund af sit køn.\nCtrl+r+registernavn (uden \u0026ldquo;) sætter ind fra registeret.\n:reg a b c --- Registers --- \u0026quot;a register a content \u0026quot;b register b content \u0026quot;c register c content "
    }
    
    , 
    {
        "url": "/erfaringer/indhold/yaml-zettlr/",
        "title": "Frontmatter i Zettlr",
        "content": "Status:\n          s..9 Noteret Ide-fasen   s..7 Researchet     Kladde - udfolde og tilføje    s..4 Revideret Indhold til- og fravalgt   s..3 Redigeret Struktur - udtryk   s..2 Korrigeret Korrektur   s..1 Færdig (skal udgives)    s..0 Udgivet (skal markedsføres)     zid: 20200917203359 # Zettlr-id title: Titel author: Lennart Kiil s: s..0 # udgivet "
    }
    
    , 
    {
        "url": "/tools/zettlr/",
        "title": "Zettlr",
        "content": ""
    }
    
    , 
    {
        "url": "/cases/",
        "title": "Cases",
        "content": "Under linket til hver enkelt case er nogle af mine erfaringer med pågældende case også linket. Jo, man lærer meget hen ad vejen.\n"
    }
    
    , 
    {
        "url": "/cases/folkets/",
        "title": "FOLKETS",
        "content": "En dansk brand- og medieplatform\nFOLKETS.DK er et enorm stort projekt. Visionen er at udfordre både de danske medier og de amerikanske \u0026ldquo;tech giants\u0026rdquo;.\nSamtidig med at øjnene skal holdes på dette langsigtede mål, skal de betalende brugere også løbende serviceres med godt indhold.\nDer skal skabes indtægter og hele projektet skal løbende tilpasses og \u0026ldquo;trimmes\u0026rdquo; da der hele tiden kommer nyt på.\nFOLKETS.DK er uden sammenligning det mest lærerige fagligt set, som jeg har foretaget mig i mit arbejdsliv.\n"
    }
    
    , 
    {
        "url": "/genrer/",
        "title": "Genrer",
        "content": "Genrer på Kiils\n"
    }
    
    , 
    {
        "url": "/emner/indhold/",
        "title": "indhold",
        "content": ""
    }
    
    , 
    {
        "url": "/genrer/lifehacks/",
        "title": "lifehacks",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/hosting/20200912071936/",
        "title": "Styr på dit indhold: Global prioritet og status",
        "content": "Indledning Hvis man i sit daglige virke skaber meget indhold, så kan det være en udfordring at skabe overblik over indholdet.\nFor det første skal man jo vide, hvad man allerede har skabt - eller rettere hvor langt man er kommet medd udviklingen af forskellige tekster.\nOg her tager jeg udgangspunkt i tekster, men den metode jeg her præsenterer jer for kan sikkert med fordel anvendes på andre typer indhold også.\nPrioritering Der er mange måder at prioritere sit indhold på. Når tiden er knap, er det vigtigt at overveje om det indhold du arbejder med overhovedet er relevant.\nSelv laver jeg en overordnet prioritering af mine tekster allerede i ide-fasen ud fra mine forpligtelser: Bidrager teksten med værdi til mine abonnenter på Folkets? Bidrager den med værdi i mit eget liv?\nHvis svaret er nej til de to spørgsmål, så får teksten en lav prioritet eller jeg \u0026ldquo;dræber\u0026rdquo; den allerede i idéfasen. Har jeg allerede skrevet noget, så ryger det i arkivet.\nIndhold, som er væsentligt nok til at arbejde videre med, tagger jeg på følgende vis:\nDeadline\n   Tag Prioritet     #p4 Lever i ARKIV   #p3 Udvikles i ARBEJD   #p2 \u0026hellip;   #p1 Deadline   #p0 Lige nu    Status    Tag Status     #s5 Udkast / ide   #s4 \u0026hellip;   #s3 \u0026hellip;   #s2 Mangler kun korrektur   #s1 Klar til udgivelse   #s0 Udgivet og arkiveret    Meget tidsfølsomt materiale får en deadline\nPIPA\nProjekter\nAfsluttende bemærkning Dette workflow er kun for kode-filer og omfatter ikke medie-filer, konfiguration eller databaser.\n"
    }
    
    , 
    {
        "url": "/tools/zettelkasten/",
        "title": "Zettelkasten",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/automatisering/",
        "title": "automatisering",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/computer-investering/",
        "title": "Hvad betaler du din computer i løn?",
        "content": "Der fdf\n"
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/grep-mv/",
        "title": "mv og grep",
        "content": "Command substitution i terminalen i samme folder som filen ligger med zsh:\nmv $(grep -il \u0026quot;tekst\u0026quot; *.md) ../ARKIV I mit tilfæde\nmv $(grep -il \u0026quot;#s0\u0026quot; *.md) ../ARKIV Hvor #s0er navnet på det tag som jeg giver udgivet materiale.\nBemærk: virker muligvis ikke hvis filnavane indeholder mellmrum eller ikke-standard karakterer. Se evt: http://www.jpeek.com/articles/linuxmag/2005-05/\n"
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/vim-zsh/",
        "title": "mv og grep",
        "content": "vim *.txt(om[1]) mvim *.txt(om[1]) vim *.md(om[1]) mvim *.md(om[1]) "
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/zmv-filetype-change/",
        "title": "mv og grep",
        "content": "Jeg har et arkiv over de fleste af mine skriverier i markdown-format.\nMen nu er markdown jo reelt bare tekst-filer. Så for eftertidens skyld ville jeg ændre endelsen på mine markdown filer fra md til txt.\nTusindvis af filnavne skulle ændre. Manuelt ville det tage lang tid.\nDer var heldigvis en nemmere løsning.\nDen nyeste udgave af MacOs har zsh som shell, og her er det nemt. Først skel der installeres en extension til zsh som hedder zmv.\nautoload -U zmv Så skal alle .md fil-endelser laves om til .txt fil-endelser.\nzmv '(*).md' '$1.txt' Så er det gjort.\nPS. Lad være at gøre dette hvis dit program kun tolker filernes markdown markup hvis filen har md-endelse.\n"
    }
    
    , 
    {
        "url": "/tools/zsh/",
        "title": "zsh",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/zsh-cheatsheet/",
        "title": "zsh cheatsheet",
        "content": "mv $(grep -il \u0026quot;#s0\u0026quot; *.txt) ../ARKIV pdt *.txt(om[1]) pdt er mit eget alias for pandoc med toc.\nOg *.txt(om[1]) tager den seneste ændredede fil. om er order modified. Med stort O ville samme kommando have vendt rækkefælden så man fik den fil som var blevet ændre for længst tid siden.\nmv *.txt(.m+31) ../ARKIV Flyt alle txt-filer, som ikke er blevet ændret de seneste 31 dage, til ARKIV.\nzsh er rigtig god til den slags.\n"
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/html-med-toc-fra-markdown-via-pandoc/",
        "title": "HTML med toc fra markdown via pandoc",
        "content": "I terminalen i samme folder som filen ligger:\npandoc -s --toc filename.md Og kopier så alt mellem body-tags.\nBonus: Pandoc gør ikke æ, ø og å grimme i interne links :)\n"
    }
    
    , 
    {
        "url": "/tools/pandoc/",
        "title": "pandoc",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/sortering/",
        "title": "sortering",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/latex/",
        "title": "latex",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/redigering/",
        "title": "redigering",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/sidetal/",
        "title": "Sidetal væk fra forsiden i pdf over Pandoc fra markdown",
        "content": "Først fjernes sidenumre generelt i frontmatter:\n--- header-includes: | \\pagenumbering{gobble} ... --- Så indsættes sidenumre nede i selve dokumentet:\n\\pagenumbering{arabic} ... På den måde får man fjernet sidetal fra forsiden, hvor titlen er, og igen indsat sidetal længere fremme i selve dokumentet.\n"
    }
    
    , 
    {
        "url": "/brands/",
        "title": "Brands",
        "content": "Brands som Kiils råder over. Hosted på platformen Folkets.\n"
    }
    
    , 
    {
        "url": "/erfaringer/seo/corona/",
        "title": "Er det sådan censur ser ud?",
        "content": "Jeg valgte fra starten at alt indhold om den nye coronavirus på FOLKETS skulle være frit tilgængeligt for alle. Også selvom jeg vidste at den beslutning ville komme til at koste mig en del penge.\nJeg fulgte virkelig meget med. Nok for meget. Brugte al min tid på at følge udviklingen i andre lande. Og jeg brugte naturligvis tid på at advare danskerne om at coronavirus var en alvorlig sag. Ikke \u0026ldquo;bare en influenza\u0026rdquo;.\nDenne indsats fra min side blev bestemt ikke belønnet på Facebook. Her havde mine indlæg om coronavirus stort set ingen gennemslagskraft. I hvert fald ikke i forhold til andre ting jeg til dagligt skriver om.\nMen til min store glæde, så kompenserede trafikken fra Google for manglen på Facebook. Når man bruger tid på noget vigtigt, og mener at man har noget at byde ind med, så er det rart at det rent faktisk kommer ud og gør gavn.\nOg det gør oplysning og information jo kun hvis folk rent faktisk for dem at se.\nMen så skete der for et par dage siden noget underligt. Jeg bemærkede hurtigt at trafikken til FOLKETS faldt en del. Ret abrupt.\nDelingerne på Facebook de klarede sig hverken bedre eller dårligere end andre delinger om coronavirus. Så der var noget andet i gære.\nJeg tjekkede så i Googles søgekonsol. Og fik der bekræftet min mistanke.\nPå få dage var FOLKETS skubbet fra en placering på side et til en placering ned på side tre for søgeordet \u0026lsquo;corona\u0026rsquo;. Det er alligevel noget af et \u0026ldquo;drop\u0026rdquo;.\nSå nu står jeg i den situation at jeg ikke får trafik fra hverken Facebook eller Google. Endda på et område hvor jeg har bidraget med væsentlige indlæg før de fleste andre her i landet.\nOg jeg aner ikke hvorfor. Jeg aner det virkelig ikke.\nMen det får mig da til at tænke over den magt Google og Facebook har. Og den magt staten har med Google og Facebook som proxier.\nJeg kan ikke konkludere at der er tale om censur. Og måske er censur slet ikke det rigtige ord. Måske er det bare en fluktuation.\nMen effekten er den samme; folk kommer ikke til at læse det jeg skriver.\nDet må jeg leve med. Og jeg håber da på et comeback.\nOg uanset hvad er det trods alt betydeligt bedre at blive usynliggjort i den digitale verden end at blive \u0026ldquo;taget ud\u0026rdquo; i den virkelige.\n"
    }
    
    , 
    {
        "url": "/brands/folkets-avis/",
        "title": "Folkets Avis",
        "content": "Folkets Avis er et mediebrand på udgiverplatformen FOLKETS.\nLennart Kiil En dansk brand- og medieplatform\nFOLKETS.DK er et enorm stort projekt. Visionen er at udfordre både de danske medier og de amerikanske \u0026ldquo;tech giants\u0026rdquo;.\nSamtidig med at øjnene skal holdes på dette langsigtede mål, skal de betalende brugere også løbende serviceres med godt indhold.\nDer skal skabes indtægter og hele projektet skal løbende tilpasses og \u0026ldquo;trimmes\u0026rdquo; da der hele tiden kommer nyt på.\nFOLKETS.DK er uden sammenligning det mest lærerige fagligt set, som jeg har foretaget mig i mit arbejdsliv.\n"
    }
    
    , 
    {
        "url": "/tools/googles-s%C3%B8gekonsol/",
        "title": "Googles-søgekonsol",
        "content": ""
    }
    
    , 
    {
        "url": "/genrer/overvejelser/",
        "title": "overvejelser",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/seo/",
        "title": "SEO",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/devops/",
        "title": "devops",
        "content": ""
    }
    
    , 
    {
        "url": "/genrer/docs/",
        "title": "docs",
        "content": ""
    }
    
    , 
    {
        "url": "/cases/gastrofun/",
        "title": "Gastro Fun",
        "content": "For mig er der en ekstra tilfredsstillelse ved at arbejde på ting hvor jeg har været med fra starten til at lægge fundamentet. Og det var tilfældet med madsitet GastroFun.dk .\nSammen med Per Asmussen byggede jeg GastroFun.dk fra bunden. Vi har været gode til at finde de rigtige løsninger i forhold til indholdsstruktur og informationsarkitektur.\nSiden har allerede opnået en meget prominent placering i Googles søgemaskine hvilket har været et centralt succeskriterie.\nPer er meget ambitiøs med siden, og det passer mig godt. I dag er udvikling på nettet altid noget løbende fordi konkurrenterne hele tiden er i bevægelse.\nJeg er derfor fortsat med til at rådgive og løse konkrete udfordringer på GastroFun.dk så siden forhåbentligt kan klare sig endnu bedre i fremtiden.\nSe også docs "
    }
    
    , 
    {
        "url": "/tools/git/",
        "title": "git",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/ssh/",
        "title": "ssh",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/devops/workflow/workflow-gastrofun/",
        "title": "Workflow for code på gastrofun",
        "content": "Lokalt Det første foregår lokalt på gitlab/dev.gastrofun.dk\nmaster branch fra gitlab/dev.gastrofun.dk går til live site over gitlab.\ndev branch fra gitlab/dev.gastrofun.dk går til dev site over gitlab.\nTil live Hvis noget skal til live\ngit checkout master vær sikker på at have den nyeste master fra origin:\ngit pull Lav ændringer\ncheck med\ngit status Så\ngit add . og\ngit commit -m \u0026quot;deskriptiv tekst her\u0026quot; og\ngit push Til dev Tilsvarende, men\ngit checkout dev På internet-serveren ssh XXXXX@NN.NN.NN.NN -p NNN Hvis det er dev så gå til dev folder, hvis det er live så gå til live folderen.\nSikre at vi er på den rigtige branch i forhold til miljø\ngit branch hvis i orden\ngit pull Bemærk at git pull i virkeligheden både henter (fetch) og merger filerne.\nAfsluttende bemærkning Dette workflow er kun for kode-filer og omfatter ikke medie-filer, konfiguration eller databaser.\n"
    }
    
    , 
    {
        "url": "/erfaringer/some/facebook/fald/",
        "title": "En langsom pinefuld død på Facebook",
        "content": "En samarbejdspartner fortalte mig for ikke så længe siden:\n– Jeg har brudt koden på facebook!\n– Hvordan?\n– Man betaler bare.\nJo, det tror jeg gerne på.\nEnhver som arbejder med markedsføring eller mediedrift på facebook ved at facebook gør meget ud af at oplyse en om mulighederne for at øge rækkevidden ved at betale for boost af ens indhold.\nDer levnes ingen tvivl om at facebook gerne vil have at man bruger penge på at promovere sine sider og sine ikke-personlige indlæg.\nDer dukker meget ofte forskellige former for påmindelser op om at dette er muligt. Og hvis man betaler og for sat sin målgruppe rigtigt sammen, så kan man sikkert ofte få en del \u0026ldquo;bang for the buck\u0026rdquo;.\nMen det er ikke bare de direkte opfordringer, facebook kommer med, som underbygger teorien om at der skal bruges penge på facebook hvis man vil have hurtige resultater.\nHer ses udviklingen i antal følgere på Folkets Avis\u0026rsquo; facebookside nogle måneder i slutningen af 2019:\nJeg bemærker en jævn langsomt nedadgående trend. Det på trods af at der ellers ofte er interesse og engagement på siden.\nJeg ville ikke blive overrasket hvis facebook arbejder med deres algoritmer på en måde så der falder flere fra end der kommer til - med mindre særlige forhold gør sig gældende.\nSå kan man enten være meget dygtig og dedikeret i sin jagt på flere følgere. Eller man kan betale sig fra det. Eller, naturligvis, kombinere de to tilgange.\nJeg skal her være ærlig:\nSom medieejer er facebook blevet mindre interessant. For for et givet antal følgere er det nu sværere end tidligere at få folk ud af facebooks lukkede have.\nDet er derfor mest sandsynligt at jeg koncentrerer mere af min indsats andre steder fremover. Om at opbygge medieplatformen FOLKETS yderligere.\nFor andre kan facebook til stadighed være en central del af forretningen.\nMen det kræver som hovedregel en betydelig investering af både tid og efterhånden også penge at få ordentligt udbytte af indsatsen.\nDe nemme tider med facebook er for længst forbi.\n"
    }
    
    , 
    {
        "url": "/emner/facebook/",
        "title": "facebook",
        "content": ""
    }
    
    , 
    {
        "url": "/genrer/polemik/",
        "title": "Polemik",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/some/",
        "title": "SoMe",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/fundraising/copydan/copydan-digital/",
        "title": "100.000 gange årligt bruges mine tekster i undervisningen uden at jeg får en krone for det – og CopyDan kan ikke hjælpe mig",
        "content": "På grund af forældet lovgivning kan CopyDan ikke hjælpe mig.\nLad mig forklare sagen:\nJeg er meget glad for og stolt over Klimaleksikon - Danmarks bedste sted for børn og unge at blive klogere på alt hvad der har med klima at gøre.\nSitet virker på alle måder efter hensigten og hjælper hvert år cirka 100.000 børn og unge med at få mere viden om klima og klimarelaterede emner.\nDet kan jeg kun være enormt tilfreds med.\nOg både politikere og erhvervsliv kan slet ikke holde op med at fortælle om hvor vigtigt emnet er.\nSå er det godt at hjælpe med at klæde børn og unge fagligt på til at forstå mekanismerne bag klimaforandringer.\nMen der er også meget følelsesbetonet og irrationel debat om klima i Danmark. Ikke mindst blandt voksne mennesker.\nDet har skabt en situation hvor emnet klima for mange børn og unge er blevet en debiliterende ting i deres hverdag som gør dem bekymrede og kede af det.\nOplysning, af den art som Klimaleksikon leverer med fokus på det faktuelle, kan også være med til at modvirke de debiliterende tendenser til klimaangst i børn.\nOg give dem en forståelse af hvad vi mennesker kan gøre for at imødegå klimaforandringer med hjælp fra vores intelligens og fornuft – og vores enestående evne til at udvikle teknologiske løsninger.\nSom en ekstra bonus kan klima, som emnet tilgås på Klimaleksikon, engagere flere piger i STEM-fagene og STEAM-fagene. Noget som mange mener er meget vigtigt.\nDet lyder jo alt sammen meget godt.\nMen, men, men.\nJeg har nu i 11 år af egen pengepung betalt for at holde Klimaleksikon kørende. Jeg har betalt professionelle fagformidlere for at lave indhold og holde indhold opdateret.\nDet kan jeg ikke blive ved med.\nOg da jeg på forskellig vis kunne se at Klimaleksikon blev aktivt brugt i undervisningen kontaktede jeg CopyDan.\nCopyDan sender nemlig med lovhjemmel fakturaer ud til uddannelsesinstitutionerne på vegne af udgivere og autorer.\nDe var utroligt flinke og rare inde på CopyDan. Men de kunne til min forbløffelse absolut intet gøre for at hjælpe mig.\nPå trods af jeg er både udgiver og autor, som CopyDan kalder forfattere og skribenter, så kunne de ikke hjælpe mig.\nSelvom de jo egentligt som nævnt kræver penge ind fra netop uddannelsesinstitutionerne på vegne af netop sådan nogle som mig, der skaber tekster og andet indhold som bruges massivt i undervisningen.\nOg på trods af at jeg kan bevise dette.\nHer er for eksempel en liste over de ti sites jeg har flest henvisninger fra:\nSom I kan se, så er det hovedsageligt forskellige læringsplatforme som bruges af folkeskoler og ungdomsuddannelser som dominerer de øverste pladser.\nDet betyder at lærere aktivt linker til og altså bruger mit materiale i deres undervisning. Og med god grund.\nOg hvis vi ser på hvornår Klimaleksikon bliver benyttet, så er det også klart i skoletiden:\nMen selvom mit materiale bliver massivt benyttet i undervisningen, også af lærerne, så kan jeg intet få fra CopyDan.\nFordi det foregår digitalt. Og fordi der \u0026ldquo;kun\u0026rdquo; i teknisk forstand foretages en kopiering (af filer ned i elevens browser når de klikker det link som læreren deler med dem.)\nHavde jeg udgivet en håndgribelig fysisk bog som var blevet kopieret og benyttet i undervisningen i samme omgang, så var jeg blevet betalt for det.\nDet virker som om lovgivningen ikke er fulgt med tiden.\nDet kan jeg bare ikke bruge til specielt meget, jeg kan blot konstatere at mange andre, som får deres materiale benyttet i mindre omfang end mig, de får penge for det - mens jeg ikke får en krone.\nSå indtil videre må jeg glæde mig over at have været idealist og gennem 11 år at have gjort over en million mennesker klogere på klima. Gjort flere piger interesserede i tekniske og naturvidenskabelige fag. Og måske endda have forhindret eller afhjulpet klimaangst blandt en del børn.\nOg det er altsammen bestemt også ganske værdifuldt.\n"
    }
    
    , 
    {
        "url": "/emner/copydan/",
        "title": "CopyDan",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/finansiering/",
        "title": "finansiering",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/fundraising/",
        "title": "fundraising",
        "content": ""
    }
    
    , 
    {
        "url": "/cases/klimaleksikon/",
        "title": "Klimaleksikon",
        "content": "Klimaleksikon.dk er med over 11 år på bagen Danmarks bedste og længstlevende side om klima .\nSiden er et samarbejde mellem mig og to andre naturfagsformidlere, Thomas Hesselberg og Mikkel Houmøller. Siden indeholder omkring 100 opslag på centrale emner inden for klima og klarer sig enormt godt i google-søgninger.\nSiden holdes løbende opdateret, og hundredetusinder af børn og unge har lært om klima og energi på siden.\nSidens brugere er overvejende børn i folkeskolens ældste klasser og unge på ungdomsuddannelserne.\nLærerne bruger aktivt Klimaleksikon i undervisningen, det ses blandt andet af de mange henvisninger fra diverse undervisningsplatforme:\nDesuden ser vi at Klimaleksikon hovedsageligt finder anvendelse inden for den almindelige undervisningstid:\nDer er en overvægt af piger hvilket er en smule atypisk for en side som i bund og grund er naturvidenskabeligt orienteret og skabt af naturfagsformidlere.\nMen det viser i hvert fald at interessen i naturvidenskab og teknologi er der fra den kant også når det overordnede emne blot er vedkommende nok.\nOpslagene, som er kerneindholdet på siden, er naturligvis skrevet i et tilgængeligt sprog som passer til målgruppen af unge mennesker. Men mange granvoksne har skam også glæde af siden. På en række af opslagene har vi nederst spørgsmål, som brugeren kan besvare og dermed få en fornemmelse af om man fået fat i de væsentligste oplysninger i teksten ovenfor.\nSiden er strengt apolitisk og faktuelt baseret. Det er en aftale jeg selv er glad for, da der er en stor lettelse i at være involveret i noget som er ent fakta-orienteret. Jeg nyder virkelig at have et frirum for politik og har derfor meget let ved at adskille Klimaleksikon fra mit øvrige virke.\n"
    }
    
    , 
    {
        "url": "/emner/%C3%B8konomi/",
        "title": "økonomi",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/crowdfunding/",
        "title": "crowdfunding",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/cta/",
        "title": "cta",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/donorbox/",
        "title": "donorbox",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/fundraising/klimaleksikon-crowdfunding-donorbox/",
        "title": "Kan man crowdfunde et klimaleksikon?",
        "content": "Klimaleksikon er en meget væsentlig dansk kilde til især unge menneskers viden om klima og klimaændring.\nOm to måneder fejrer Klimaleksikon 11 års fødselsdag på nettet. Jeg har personligt sørget for at over en million mennesker i den periode er blevet klogere på klima. Det har jeg gjort rent pro bono.\nMen det koster at udvikle og holde et klimaleksikon up to date, og jeg har derfor besluttet at jeg vil skabe et økonomisk fundament for Klimaleksikon der gør at jeg i det mindste får dækket mine udgifter ind fremover.\nJeg har kontaktet et stort antal danske virksomheder, men de var ikke interesserede i at bidrage til at udbrede viden om klima. Til trods for at de i pressen fører sig frem som de store klimaforkæmpere.\nNuvel, deres penge - deres prioriteringer.\nJeg vil nu undersøge om der blandt befolkningen bredt set er en større reel interesse for at sætte sine penge der hvor snakken går.\nDerfor har jeg lavet en crowdfunding med følgende ordlyd:\n Lennart Kiil har gennem 11 år for egen regning drevet Klimaleksikon. I den periode er over en million mennesker blevet klogere på klima på grund af Klimaleksikon.\nKlimaleksikon bruges dagligt af især unge over hele landet når de søger viden om klima og relaterede emner. Det er vigtigt at de ved der findes en anden mulighed end at pjække fra skole. Klimaleksikon sørger for at der også er at sted på nettet for dem som vil lære noget og søger at tilgå klimaproblemet konstruktivt.\nDen vidensbaserede og fornuftige tilgang er nu vigtigere end nogensinde før. Vi risikerer at spørgsmålet om klima bliver overtaget af politiske aktivister.\nMen det er dyrt at holde et klimaleksikon kørende, udvikle det og give så mange mennesker i alle aldre mere viden. Det koster årligt titusindvis af kroner.\nDerfor mener Lennart Kiil at det er på tide at flere træder til og bakker op om Klimaleksikon som baserer sig på viden frem for følelser i klimaspørgsmålet. Desværre har danske virksomheder, som ellers taler meget om klima, hidtil vist sig uvillige til at bakke op om og sponsorere det vidensbaserede Klimaleksikon.\nSå nu må almindelige borgere og gode mennesker træde til!\n På Klimaleksikon har jeg valgt at holde call to action diskret i første omgang.\nDet ser sådan her ud:\nDette CTA sender en videre til en formular.\nDenne formular kan både ses og bruges lige herunder, så du er naturligvis velkommen til at yde et bidrag til Klimaleksikon hvis du har lyst til at støtte en videns- og fornuftsbaseret tilgang til klimaproblemet.\n Det bliver spændende om der er opbakning :)\n"
    }
    
    , 
    {
        "url": "/cm/",
        "title": "Cm",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/javascript/",
        "title": "javascript",
        "content": ""
    }
    
    , 
    {
        "url": "/kunder/",
        "title": "Kunder",
        "content": " Jeg giver Kiils mine varmeste anbefalinger\n– Per Asmussen\n "
    }
    
    , 
    {
        "url": "/cm/nlr/",
        "title": "nlr",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/frontend/ingrediens-omregner/",
        "title": "Omregner til ingredienser",
        "content": "Hovedsageligt kopieret fra: https://codepen.io/jacobbanner/pen/oxeoqp\nOmregner til ingredienser          =\n       .omregner-wrapper { margin: 2rem; } .omregner-wrapper::after { display: block; content: \"\"; clear: both; } .converter-wrapper { margin: 0 auto; width: 100%; max-width: 600px; text-align: center; padding: 10px; box-sizing: border-box; } .converter-wrapper input { font-size: 1em; width: 100%; text-align: center; margin-top: 10px; height: 40px; box-sizing: border-box; } .converter-wrapper span { position: relative; display: inline-block; vertical-align: middle; width: 100%; } .converter-wrapper span select { background-color: #263648; color: #fff; font-size: inherit; padding: 10px; width: 100%; border: 0; margin: 0; border-radius: 0px; text-indent: 0.01px; text-overflow: ''; -webkit-appearance: none; } .converter-wrapper span::before, .converter-wrapper span::after { content: \"\"; position: absolute; pointer-events: none; } .converter-wrapper span::after { content: \"\\25BC\"; height: 1em; font-size: .625em; line-height: 1; right: 1.5em; top: 50%; margin-top: -.5em; color: white; } .converter-wrapper span::before { width: 2.5em; right: 0; top: 0; bottom: 0; border-radius: 0; background-color: dimgray; } .converter-side-a, .converter-side-b { float: left; margin-top: 10px; box-sizing: border-box; width: 45%; } .converter-equals { float: left; box-sizing: border-box; width: 10%; font-size: 3rem; text-align: center; } .converter-equals p { line-height: 0.3; } .converter-side-a { padding-right: 10px; } .converter-side-b { padding-left: 10px; }   // // --- JAVASCRIPT UNIT CONVERTER // If you study this file, you'll see that all the important data (namely, unit names and conversion factors) are explicitly defined as JavaScript arrays under the \"Global Variable \u0026 Data Definitions\" heading (which should be right under these comments). // This is done, because: a) I figured it's the fastest way to do it, and b) it keeps everything in one file, making local storage and usage a snap. // If you wanna mess with these array definitions, keep in mind the following (better study the definitions first before you read this; otherwise skip it altogether): // 1) The unit[i][j] and factor[i][j] arrays should have the same j-length and their elements should correspond to each other in the j dimension; i.e. unit[0][2] should define the name and factor[0][2] the conversion factor of the SAME unit. Duh!... // 2) In every property (i.e. the i-dimension of the unit and factor arrays) there should be defined a 'primary' or 'base' unit, i.e. one with a conversion factor of 1. The definitions of the other (secondary) units should use this formula: // 1 [Secondary unit] = [Secondary unit conversion factor] [Primary Unit] // ^ // This goes in the factor array ___| // // e.g.: 1 ft = 0.3048 m // ==================================== // Global Variable \u0026 Data Definitions // ==================================== var property = new Array(); var unit = new Array(); var factor = new Array(); property[0] = \"Havregryn\"; unit[0] = new Array(\"spsk\", \"tsk\", \"ml\", \"dl\", \"gram\"); factor[0] = new Array(1, 0.333333333333333333, 0.06666666666666666666, 6.6666666666666666, 0.2); property[1] = \"Hvedemel\"; unit[1] = new Array(\"spsk\", \"tsk\", \"ml\", \"dl\", \"gram\"); factor[1] = new Array(1, 0.333333333333333333, 0.06666666666666666666, 6.6666666666666666, 0.1111111111111111111111); property[2] = \"Kartoffelmel\"; unit[2] = new Array(\"spsk\", \"tsk\", \"ml\", \"dl\", \"gram\"); factor[2] = new Array(1, 0.333333333333333333, 0.06666666666666666666, 6.6666666666666666, 0.08333333333333333333); // =========== // Functions // =========== function UpdateUnitMenu(propMenu, unitMenu) { // Updates the units displayed in the unitMenu according to the selection of property in the propMenu. var i; i = propMenu.selectedIndex; FillMenuWithArray(unitMenu, unit[i]); } function FillMenuWithArray(myMenu, myArray) { // Fills the options of myMenu with the elements of myArray. // !CAUTION!: It replaces the elements, so old ones will be deleted. var i; myMenu.length = myArray.length; for (i = 0; i = 35 \u0026\u0026 key = 48 \u0026\u0026 key = 96 \u0026\u0026 key "
    }
    
    , 
    {
        "url": "/kunder/per-asmussen/",
        "title": "Per Asmussen",
        "content": "Per Asmussen siger:\n I forbindelse med etableringen af mit madmedie www.gastrofun.dk var jeg i dialog med flere digitale udviklingshuse, men efter en god snak med Lennart fra Kiils var jeg aldrig i tvivl om at han skulle være min samarbejdspartner hele vejen igennem – fra konceptudvikling, hjemmesideopbygning, indholdsstrategi, tekniske krav samt det visuelle udtryk.\n Forståelsen for hvad det vil sige at gøre mediet brugervenligt både for læserne og brugerne var helt i top og en masse god sparring og feedback har givet mig et fremtidssikret og stærkt medie.\nProcessen fra ide til et færdigt medie var imponerende hurtig og siden var sågar udgivet 14 dage før lovet, hvilket var helt perfekt.\nTre måneder efter siden var i luften, fik jeg et SEO-bureau til at vurdere siden på nærmest alle parametre og siden fik en gennemsnitskarakter på 9 (på en 1-10 skala) og især sidens hurtighed og taksonomi-opbygning har imponeret mig.\nMediet har brug for konstant tilpasning og Kiils hurtige rettelser og justeringer er lige det jeg har brug for i en travl hverdag.\nJeg giver Kiils mine varmeste anbefalinger.\n"
    }
    
    , 
    {
        "url": "/emner/widgets/",
        "title": "widgets",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/brugervenlighed/",
        "title": "brugervenlighed",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/journalistik/",
        "title": "journalistik",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/markdown/",
        "title": "markdown",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/journalistik/mellemrubrikker-indholdsoversigt/",
        "title": "Mellemrubrikker som indholdsoversigt",
        "content": "Da jeg for nylig udvidede min profilside på FOLKETS, som du kan finde her: Lennart Kiil , lavede jeg en indholdsoversigt baseret på mellemrubrikkerne i teksten.\nDet viste sig hurtigt at Google i søgeresultatet tog højde for dette ved at linke direkte til nogle af de mellemrubrikker som jeg havde angivet i indholdsoversigten og i selve mellemrubrikkerne med id.\nIndholdsoversigten er teknisk set en uordnet liste.\nSå\n\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#journalistisk-deklaration\u0026#34;\u0026gt;Journalistisk deklaration\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; linker til længere nede\n\u0026lt;h2 id=\u0026#34;journalistisk-deklaration\u0026#34;\u0026gt;Journalistisk deklaration\u0026lt;/h2\u0026gt; "
    }
    
    , 
    {
        "url": "/erfaringer/frontend/jquery-javascript/",
        "title": "jQuery - væk med paranteser i tekst",
        "content": "\u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-2.2.4.min.js\u0026#34; integrity=\u0026#34;sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; function stripParenthesis( node ) { if(node.length) { node.contents().each(function(index, child) { if( child.nodeType === 3 ) { child.nodeValue = child.nodeValue.replace(/\\(|\\)/g, \u0026#39;\u0026#39;); } else { stripParenthesis( $(child) ); } }); } } jQuery(document).ready(function($) { stripParenthesis( $(\u0026#39;a:contains(\u0026#34;Opskriftsgruppe\u0026#34;)\u0026#39;).closest( \u0026#34;span\u0026#34; ) ); $(\u0026#39;a:contains(\u0026#34;Opskriftsgruppe\u0026#34;)\u0026#39;).css(\u0026#39;display\u0026#39;, \u0026#39;none\u0026#39;); $(\u0026#39;a:contains(\u0026#34;Opskriftsgruppe\u0026#34;)\u0026#39;).closest( \u0026#34;span\u0026#34; ).css({ \u0026#34;font-size\u0026#34;: \u0026#34;21px\u0026#34;, \u0026#34;line-height\u0026#34;: \u0026#34;3\u0026#34; }); }); \u0026lt;/script\u0026gt; "
    }
    
    , 
    {
        "url": "/emner/ankertekst/",
        "title": "ankertekst",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/seo/hvad-betyder-ankertekst/",
        "title": "Hvad betyder ankertekst?",
        "content": "Gider du linke til min profil-side på FOLKETS med Lennart Kiil i ankerteksten?\nSpurgte jeg i dag.\nPersonen, jeg spurgte, var så venlig at linke med Lennart Kiil netop i ankerteksten. Han havde linket mit navn til min profil og dermed gjort præcist som jeg havde håbet på han ville.\n\u0026ldquo;Men hvad betyder ankertekst, bare så jeg lærer lidt her?\u0026rdquo;\nSpurgte han så.\nIfølge Wikipedia er ankerteksten:\n The anchor text, link label, link text, or link title is the visible, clickable text in a hyperlink.\n Oversat til dansk betyder det vel noget i retning af:\n\u0026ldquo;Ankerteksten er den synlige, klikbare del af et hyperlink.\u0026rdquo;\nEksempelvis sådan her:\nSe profilen for \u0026lt;a href=\u0026#34;https://www.folkets.dk/brugere/lennart-kiil\u0026#34;\u0026gt;Lennart Kiil\u0026lt;/a\u0026gt; for at lære mere om ham. Som bliver til:\nSe profilen for Lennart Kiil for at lære mere om ham.\nDe fleste er enige om at ankerteksten har betydning i SEO-sammenhæng for ranking i Googles søgemaskine.\nMit håb er netop også at jeg kan generobre førstepladsen på Google for mit eget navn, en plads jeg har måttet - midlertidigt forhåbentligt - overlade til Berlingske.\n"
    }
    
    , 
    {
        "url": "/emner/linkbuilding/",
        "title": "linkbuilding",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/ranking/",
        "title": "ranking",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/sorter-markdown-efter-overskrifter/",
        "title": "Sorter markdown dokument",
        "content": "Sorter sektioner i markdown. For eksempel efter #\nSorter # b mellemrubrik efter # a mellemrubrik.\n#B a content of B #A b content of A til\n#A b content of A #B a content of B I terminal med\nperl -0777 -ne \u0026#39; (undef,@paragraphs) = split /^#(?=[^#])/m; print map {\u0026#34;#$_\u0026#34;} sort @paragraphs; \u0026#39; file.md For yderligere info se også svar her "
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/bevar-whitespace-output/",
        "title": "Bevar whitespace i output med &nbsp;",
        "content": "Nogle gange her man bare brug for noget plads i et dokument.\nNon-breaking space – \u0026amp;nbsp; – er ikke bare non-breaking, den er også \u0026lsquo;non-collapsing\u0026rsquo;.\nSom du kan læse på wikipedia :\n Non-collapsing behavior A second common application of non-breaking spaces is in plain text file formats such as SGML, HTML, TeX and LaTeX, whose rendering engines are programmed to treat sequences of whitespace characters (space, newline, tab, form feed, etc.) as if they were a single character (but this behavior can be overridden). Such \u0026ldquo;collapsing\u0026rdquo; of whitespace allows the author to neatly arrange the source text using line breaks, indentation and other forms of spacing without affecting the final typeset result.\n  In contrast, non-breaking spaces are not merged with neighboring whitespace characters when displayed, and can therefore be used by an author to simply insert additional visible space in the resulting output without using spans styled with peculiar values of the CSS “white-space” property. Conversely, indiscriminate use (see the recommended use in style guides), in addition to a normal space, gives extraneous space in the output.\n Derfor kan \u0026amp;nbsp; bruges til at bevare whitespace, altså tomrum - herunder blanke linjer, i html-output i browsere, pdf-output i dokumenter og så videre, når kilden er en tekst-fil, markdown eller anden \u0026lsquo;ren tekst\u0026rsquo;-baseret fil.\nEksempler:\nText Text giver\n Text\nText\n Mens\nText \u0026amp;nbsp; \u0026amp;nbsp; Text giver\n Text\n  Text\n "
    }
    
    , 
    {
        "url": "/tools/bootstrap-4/",
        "title": "bootstrap-4",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/drupal-8/",
        "title": "Drupal 8",
        "content": ""
    }
    
    , 
    {
        "url": "/cm/feed/",
        "title": "feed",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/frontend/",
        "title": "frontend",
        "content": ""
    }
    
    , 
    {
        "url": "/tools/pantheon/",
        "title": "pantheon",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/frontend/klimaleksikon-tachyons-performance/",
        "title": "Sådan fik jeg perfekte 100 i mobilhastighed",
        "content": "Med en static site generator er det efterhånden relativt nemt at bygge et site som er optimeret på ydelse.\nMen hvis nu man skal bygge noget mere kompliceret hvor man har brug for et CMS. Hvad så? Kan man stadig komme helt i top med performance i frontend med et CMS?\nJa! Heldigvis da.\nKlimaleksikon, Danmarks bedste sted at blive klog på klima , er bygget med Drupal 8. Tidligere brugte jeg Bootstrap 4 i frontend. Nu har jeg skiftet til Tachyons.\nSitet er hosted på Pantheon. Og de arbejder sammen med Fastly omkring CDN.\nAllerede med Bootstrap 4 klarede Klimaleksikon sig flot i Chromes test for ydelse i mobil. Med resultater i de helt høje 90\u0026rsquo;ere.\nMen jeg udskiftede Bootstrap 4 med Tachyons. Og nu er det lykkedes mig at få det bedst mulige resultat på 100 i mobil-testen.\nOg resultatet er vel at mærke opnået med den hårde indstilling: \u0026ldquo;Applied Fast 3G, 4x CPU Slowdown\u0026rdquo;\nDet skal siges at det er på sider uden billeder. På sider med billeder, som for eksempel forsiden, får jeg \u0026ldquo;kun\u0026rdquo; 99 som resultat.\nMen alt i alt yderst tilfredstillende resultater. Som du naturligvis selv kan efterprøve hvis du har Chrome som browser.\nKonklusion:\nKombinationen Pantheon, Drupal 8 og Tachyons kan bestemt anbefales hvis du vil have et hurtigt site.\n"
    }
    
    , 
    {
        "url": "/tools/tachyons/",
        "title": "tachyons",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/ydelse/",
        "title": "Ydelse",
        "content": "Ydelse, på engelsk performance, er en meget væsentlig parameter i næsten alle digitale produkter.\n"
    }
    
    , 
    {
        "url": "/erfaringer/drupal/drupal-error/",
        "title": "FOLKETS meget hurtigere efter drop af bannere",
        "content": "$config['system.logging']['error_level'] = 'verbose'; Genskabe cachen - hvis du ikke lige har drush ved hånden:\n$settings['rebuild_access'] = TRUE; Visit http://www.example.com/core/rebuild.php "
    }
    
    , 
    {
        "url": "/erfaringer/drupal/drupal-render/",
        "title": "FOLKETS meget hurtigere efter drop af bannere",
        "content": "\u0026lt;?php $elements = drupal_get_form(\u0026quot;user_login\u0026quot;); $form = drupal_render($elements); echo $form; ?\u0026gt;  if (!user_is_logged_in()) { $elements = drupal_get_form('user_register_form'); $form = drupal_render($elements); echo $form; } "
    }
    
    , 
    {
        "url": "/erfaringer/frontend/hastighed-uden-bannere/",
        "title": "FOLKETS meget hurtigere efter drop af bannere",
        "content": "For lidt over to uger siden droppede jeg bannere helt på FOLKETS.\nDe første resultater viste at det gav betydeligt hurtigere sider til brugerne.\nNu er der data nok til at konkludere noget mere håndfast i forhold til hastighed. Og til at se nærmere på de forskelige enheder:\nIkke overraskende er de største forbedringer der hvor der før var flest bannere. En halvering af tiden det tager at loade på tablet og laptop/desktop.\nPå mobil var der færre bannere og her er effekten mindre. En forbedring på knap 10 procent.\nMobil er også mere afhængig af ting som jeg ikke har indflydelse på såsom folks mobile dækning. Hvis folk sidder i toget eller andre steder med dårlig dækning, så kan ens site være nok så optimeret - så vil det stadig gå langsomt for brugeren.\nOg det afspejler sig i at det er svært at få gennemsnitstiderne lige så langt ned som for enheder der er på mere stabile netværk.\nAltså, en forbedring i snit på knap 10 procent på mobil. Betyder det så at ændringen har været omsonst for mobil?\nNej, man skal ikke lade sig snyde af gennemsnittet som især på mobil kan påvirkes af outliers, når folk sidder med en dårlig mobil forbindelse, og det tager måske 20 sekunder at hente en side. Det sker næppe ofte på tablets på wifi eller desktops på kablede forbindelser.\nOg hvis vi ser på intervaller i stedet for gennemsnit, så er der en klar forbedring - også for mobil:\nLæg mærke til at uanset om vi ser på mobil eller tablet / desktop, så er der nu langt, langt flere end før i de gode, hurtige intervaller og langt, langt færre i de dårlige, langsomme intervaller.\nEksempelvis er der efter at jeg droppede bannere mange flere i intervallet 0-1 sekunder og i intervallet 1-3 sekunder. Og meget færre i intervallet 7-13 sekunder. På tværs af enheder.\nDet vil sige at hvadenten vi ser på mobil eller desktop, så er der nu langt færre end før som oplever FOLKETS som langsomt.\nHvis vi alene ser på hastighed og den brugeroplevelse der ligger i forbindelse hermed, så har valget om at fjerne bannere været en ubetinget succes på tværs af alle enhedstyper.\nSenere vil jeg se på hvad det har betydet for andre faktorer såsom tid brugt på sitet, afvisningsrate og konvertering.\n"
    }
    
    , 
    {
        "url": "/tools/google-analytics/",
        "title": "google-analytics",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/seo/lovende-ctr-google-discover/",
        "title": "Lovende Google Discover klikrate (CTR)",
        "content": "Torsdag den 30. april 2019 dukkede en side fra FOLKETS for føste gang op i Googles Discover.\nSiden da er det sket nogle gange:\n   Kliks Visninger CTR1     154 ~ 1400 11%    Google Discover er en slags personligt feed baseret på Googles søgemaskine kombineret med kunstig intelligens som kan give personlige resultater.\nGoogles Discover funktion er tilgængelig på mobile Android-enheder. Discover kan tilgås med selve Google-appen.\nSet fra en udgivers synspunkt ser Google Discover interessant ud da klikraten umiddelbart er meget høj:\nPå billedet ses det også at man nu for nogle sites i Search Console kan få oplysninger om visninger og kliks fra Google Discover. Det tyder på at Google satser en del på det her.\nAntallet af kliks fra Google Discover er samlet set stadigt meget lavt, men mon ikke det kommer til at stige hvis for eksempel at Google Discover kobles mere sammen med Googles Assistent, for eksempel.\n  Click-through rate, på dansk klikrate - sommetider benævnt klikfrekvens. Andelen af kliks per 100 visninger. \u0026#x21a9;\u0026#xfe0e;\n   "
    }
    
    , 
    {
        "url": "/cases/climate-encyclopedia/",
        "title": "Climate Encyclopedia",
        "content": "Climate Encyclopedia er den engelske udgave af Klimaleksikon.dk\n"
    }
    
    , 
    {
        "url": "/erfaringer/frontend/bootstrap-4/",
        "title": "Det nemmeste CSS framework",
        "content": "Bootstrap 4 er næppe det nemmeste og hurtigste at prototype i længere. Og lidt for tungt hvis man virkelig går op i hastighed også på langsommere mobilforbindelser.\n"
    }
    
    , 
    {
        "url": "/erfaringer/seo/google-tidlig-indsats/",
        "title": "Google belønner tidlig indsats",
        "content": "Små medier kan markere sig ved at være først med på internationale navne. Og det er tilsyneladende også noget som giver bonus i søgeresultaterne.\nFor ikke så længe tid siden skrev jeg et indlæg her på Kiils med titlen: Når de små medier overhaler de store :\n De små medier er generelt mere manøvredygtige end de store. Det gælder også på indholdsstrategien.\nDet betyder at små medier kan reagere hurtigt på internationale trends.\nEt eksempel på dette er at Folkets Avis har skrevet meget om Jordan Peterson . Det har de store danske medier ikke, på trods af at han er en meget omtalt mand i den internationale presse.\n Folkets Avis var altså tidligt ude og markere sig med indhold om Jordan Peterson, som ikke var blevet opdaget af den øvrige danske presse endnu på det tidspunkt.\nI dag har flere medier så skrevet om manden.\nMen den indsats, Folkets Avis gjorde, gav ikke bare trafik dengang. Noget tyder på at en tidlig og relativ omfattende indsats belønnes af Googles søgemaskinealgoritme.\nSe her:\nDet er en flot placering. Om det bliver muligt at holde den, vil tiden vise.\nMen det er i hvert fald rart at se at det betaler sig at gøre en grundig og tidlig indsats.\n"
    }
    
    , 
    {
        "url": "/emner/indholdsstrategi/",
        "title": "Indholdsstrategi",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/indhold/om-oplevelser-og-langsigtet-indholdsstrategi/",
        "title": "Om oplevelser og langsigtet indholdsstrategi",
        "content": "Præmisserne på internettet ændrer sig hele tiden.\nKan det så overhovedet betale sig at tænke langsigtet?\nJa!\nDet er faktisk noget nær nødvendigt. Ikke mindst hvis du har planer om at hente trafik fra søgemaskiner som tillægger \u0026ldquo;historik\u0026rdquo; en stor betydning.\nOg det gør for eksempel Googles søgemaskine i min erfaring.\n(Jeg har Klimaleksikon.dk med hele ti år på nettet i næsten uforandret form at bygge den påstand på, men det vil jeg skrive om i et andet indlæg.)\nHvis du engang i fremtiden vil klare dig godt på et bestemt søgeord, er det en god idé allerede nu at gå igang med at bygge fundamentet.\nPå Folkets Avis har jeg lavet muligheden for at man kan lave publikationer, som får sin egen plads på avisen.\nHver publikation kan være redaktionelt og økonomisk uafhængig af Folkets Avis og kan i princippet endda udgives på et separat domæne.\nDen første publikation, jeg har lavet, er et magasin kaldet \u0026lt;em\u0026gt;Oplevelser\u0026lt;/em\u0026gt; . På Folkets Avis fylder politik ret meget. Så er det rart at blive mindet om at livet også er andet end det.\nIdeen er altså dels nu og her at skabe godt indhold som supplerer den redaktionelle linje og samtidig på længere sigt at rykke frem i Google på ordet \u0026lsquo;oplevelser\u0026rsquo;.\nMåske er online publikationer og magasiner i det hele taget en god måde at opbygge digital tilstedeværelse på. Og man behøver ikke nødvendigvis et domæne til hver af dem.\n"
    }
    
    , 
    {
        "url": "/erfaringer/abo/salg/",
        "title": "risikoen for at abonnenter forsvinder med denne teknik er desværre stor",
        "content": "Tidligere telefonmand skrev til mig med godt råd – lige efter kampagnen var gået i luften.\nMan kan ikke tage højde for alt selv. Og nogle gange prøver man noget af uden at have tænkt alle konsekvenser helt igennem.\nOg i forhold til abonnementsmodellen bør man nok altid overveje et eventuelt tiltags effekt ikke bare på konverteringsraten, men også på frafaldsraten.\nOg blot få minutter efter jeg i dag havde lovet en signeret madbog af Knud Damgaard til nye privat- og supersponsorer på Folkets Avis tikkede følgende besked ind:\n Du laver en klassisk fejl med at belønne nye abonnenter med din bog, hvor nogle af de gamle abonnenter så vil føle sig forfordelt. Jeg er personligt ligeglad, men risikoen for at abonnenter forsvinder med denne teknik er desværre stor. Jeg så det specielt, da jeg arbejdede i telebranchen omkring årtusindskiftet. Folk skiftede teleselskab oftere end de skiftede underbukser, fordi teleselskaberne lokkede nye kunder til og belønnede ikke dem der blev. Det er heldigvis skiftet nu. Pas på ikke at falde i den samme fælde. Dette er skrevet i kærlighed til Folkets Avis og dit arbejde.\n Det kunne jeg jo egentligt godt se at han havde ret i.\nMen han var ikke færdig endnu.\nHan skrev videre:\n En alternativ mulighed er næste gang at benytte de ting du har til rådighed som belønning i en konkurrence, hvor du udtrækker blandt alle dine abonnenter/sponsorer.\n Og det vil jeg så gøre snart.\nFor man skal behandle sine abonnenter godt. Simpelthen vise at man husker på dem man har – og ikke kun er opmærksom på at få nye ind.\nMan bliver en bedre forretningsmand af at lytte til andres råd.\nOg et bedre menneske.\n"
    }
    
    , 
    {
        "url": "/erfaringer/muren/redning/",
        "title": "En redningsplan for Folkets Avis – sådan tilpasser jeg mig for at overleve",
        "content": "Folkets Avis er enestående i den forstand at mediet i modsætning til den øvrige danske presse fungerer helt uden mediestøtte.\nDet gør at den er skarpere end de andre medier i sin kritik af systemet og politikerne. Og det er godt for demokratiet.\nMen det skal heller ikke være nogen hemmelighed at det er lidt af en udfordring at få sådan en størrelse til at løbe rundt og give overskud.\nIkke desto mindre havde jeg held med det. Og i en periode var udviklingen endog meget positiv.\nMen så ændrede Facebook på sin algoritme.\nHelt andre præmisser Facebook ændrede kort sagt på sine algoritmer, og det halverede trafikken til Folkets Avis .\nNår trafikken halveres, så halveres også antallet af abonnenter som sitet kan oppebære . Det er simpel matematik.\nÆndringen i Facebooks algoritmer betød således at antallet af betalende brugere på Folkets Avis begyndte at falde i stedet for at stige. Og det er ikke en holdbar udvikling i længden.\nNår præmisserne på den måde radikalt forandrer sig, så må man tilpasse sig. Eller opgive. Eller søge mediestøtten som de andre.\nMen for mig er mediestøtten ikke en mulighed, jeg vil benytte mig af til Folkets Avis. Så ville den blive lige så ligegyldig og systembevarende som de andre medier i Danmark.\nHeldigvis er der andre veje frem!\nFremover vil jeg fokusere mindre på de sociale medier og mere på at skabe værdi for læsere og virksomheder inde på FOLKETS.DK som nu er en udgiverplatform med plads til brands.\nFolkets Avis er altså ikke længere alene på FOLKETS.DK.\nFolkets Avis er stadig flagskibet på FOLKETS.DK - men der er også andre medier på platformen. Og plads til brands og produkter!\nMan kan sige at Folkets Avis i den forstand er blevet til et brand på FOLKETS.DK\nEt andet brand på FOLKETS.DK er mit magasin om det gode i livet: Oplevelser .\nFolkets Avis vil nok altid have lidt en særstilling i mine øjne. Folkets Avis har opbygget FOLKETS.DK.\nMen nu bliver der også plads til Folkets TV. Og meget, meget mere.\nDet er Folkets Avis der har bygget FOLKETS.DK op. Men nu kommer andre brands og medier til og understøtter det arbejde.\nSåledes klarer FOLKETS.DK sig allerede nu rigtigt fint på en række søgeord som ikke kun har relevans for Folkets Avis (omend det er Folkets Avis\u0026rsquo; fortjeneste), men også for andre brands som er på eller kunne tænkes at komme til på FOLKETS.DK.\nSamtidig vil de nye medier og brands på FOLKETS.DK bidrage yderligt til opbygningen af både forside og landingssider. Det er synergi-effekten i praksis.\nOg den slags skal der til hvis kampen skal tages bare en lille smule op imod de amerikanske medie-giganter ;)\nLad os tage landingssider som eksempel på hvordan synergi-effekten kan tage sig ud i praksis:\nLandingssider på FOLKETS.DK fungerer på tværs af de enkelte brands, og det giver en række fordele for alle parter. Hver publikation og hvert brand kan udgive på de fælles landingssider for personer og organisationer.\nFor eksempel ville et forlag kunne omtale en bog på siden for Jordan Peterson .\nEn landingsside der får en del specifik trafik. Det vil sige at de brugere som kommer ind på siden i forvejen har en interesse for emnet. Så har man et produkt, som knytter sig til den person, så er det her man skal ud med det.\nOgså forsiden er tilgængelig for alle brands og medier på platformen - når bestemte betingelser er opfyldt.\nForsiden giver plads til de bedste og mest interessante indlæg fra hver af udgivelserne og også til brands som vil kunne nyde godt af en forøget trafik og bedre placering i søgeresultaterne på Google.\nEndelig kan hver enkelt bruger på FOLKETS.DK opbygge sin egen nyhedsstrøm og følge relevante brands og medier.\nMikromedier og rapid prototyping Hele denne model giver også plads til rapid prototyping - altså det at man prøver af om noget virker. Man har allerede et publikum til rådighed og værktøjer til sammenligning med andre medier og brands.\nPå den måde kommer alt det, som er bygget op på FOLKETS.DK i forbindelse med udviklingen af Folkets Avis, mange flere til gode.\nOg uanset om det er noget omkring ens brand eller ens udgivelse, man vil have afprøvet, så kan det lade sig gøre. Lykkes eksperimentet, kan man eventuelt køre en bredere kampagne.\nDet er værd at understrege de enkelte udgiveres autonomi.\nHvert brand på FOLKETS.DK kan have sin egen redaktør, sin egen redaktionelle linje, sit eget design (inden for visse rammer) og så fremdeles.\nDer er meget andet og sige om alt dette, men afslutningsvist vil jeg blot nævne én ting mere:\nForsiden og FOLKETS.DK bliver meget mere mangfoldig på den her måde. Så det ikke altsammen handler om politik. Og det gør livet jo heller ikke.\nOg den bliver mere levende og dynamisk.\nJeg er glad for at skabe mere rum til at det gode og rare i livet også får mere omtale og plads på nettet. Og til at de dygtige producenter i Danmark kan fortælle om de de skaber til gavn for os alle.\nOg så lover jeg ikke at glemme den systemkritiske journalistik som ligger mit hjerte nært. Det er nemlig den alt det andet kan være med til at give bedre økonomiske vilkår.\nGod dag derude og tak fordi du læste med!\nLennart Se også min video her:\n  "
    }
    
    , 
    {
        "url": "/emner/abonnementsmodellen/",
        "title": "Alt om Abonnementsmodellen",
        "content": " Abonnementsmodellen forbindes på engelsk ofte med SaaS, men den rette term er snarere subscription model  "
    }
    
    , 
    {
        "url": "/cm/featured/",
        "title": "Featured",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/abo/abonnenter-nok/",
        "title": "Får jeg abonnenter nok til at leve af mit online-medie?",
        "content": "Sandsynligvis ikke. Men læs alligevel videre og få et simpelt værktøj til at vurdere dine chancer.\nAbonnementsmodellen for indhold er gammelkendt og har vist sit værd gennem tiden for magasiner og aviser.\nOg i dag har andre leverandører af indhold, for eksempel Netflix, stor succes med modellen. Også privatpersoner, som skaber indhold af forskellig art, har med hjælp fra services som Patroen haft glæde af modellen - nok oftest som supplement til anden indtægt.\nSelv har jeg erfaring med modellen fra det medie jeg har stiftet og opbygget: Folkets Avis .\nJeg kan nu leve af Folkets Avis. Det er en lille sejr i sig selv og forhåbentligt første skridt på vej mod flere succeser.\nMen hvad med dig?\nMange vil gerne starte et medie op eller på anden vis leve at at skabe indhold og sælge det online på et site man selv er ejer af.\nHvor meget skal der til? Inden man går i gang kan man med fordel gøre sig nogle overvejelser om hvad der skal til.\nDet handler om\n at få nogle læsere ind på sin side og sælge abonnementer til dem  Vi kan nu se nærmere på hvor mange læsere der skal til, hvor god man skal være til at overbevise dem om at købe et abonnement, og hvor dygtig man skal være til at fastholde sine kunder, når man først har fået dem ind som abonnenter.\nHver solgt abonnement er en \u0026ldquo;vundet\u0026rdquo; abonnent. Las os kalde antallet af vundne abonnenter for Va.\nDet antal abonnenter, som kan vindes inden for en given periode, er givet ved antal læsere, noteret som L, og den andel af læsere man får solgt et abonnement til. Denne andel kalder vi konverteringraten, noteret som K.\nFor en given periode er tilvæksten i antal abonnenter således givet ved:\n$ V_a = L \\cdot K $\nHvis der ikke er noget frafald så er det samlede antal abonnenter, noteret A, ganske enkelt lig antallet af abonnenter vundet over tid, altså Va.\nMen sådan er virkeligheden ikke. Abonnenter falder hele tiden fra og tabes konstant af mange forskellige årsager.\nDet antal abonnenter, som tabes over en given periode, kan vil kalde Ta for tabte abonnenter. Det kan udregnes som produktet af det samlede antal abonnenter, A, og den andel af disse abonnenter som tabes inden for en given periode. Denne andel kalder vi frafaldsraten, F.\n$ T_a = A \\cdot F $\nGivet et nogenlunde stabilt læsertal og stabile konverterings- og frafaldsrater, så vil mediet på et tidspunkt nå et plateau, eller et vækstloft om man vil, hvor antal af løbende vundne abonnenter er lig med antallet af løbende tabte abonnenter – og det samlede antal abonnenter vil da stagnere. En ligevægt er på plads:\n$ T_a = V_a $\nHvis vi i stedet indsætter komponenterne for Ta og Va, får vi:\n$ A \\cdot F = L \\cdot K $\nDet antal abonnenter, du vil kunne opnå med et givet antal læsere og en fastlagt konverterings- og frafaldsrate, kan altså forudsiges ud fra denne simple formel:\n$ A = \\frac{L \\cdot K}{F } $\nLad os tage et konkret eksempel med 100.000 månedlige læsere, en månedlig konverteringsrate på en halv promille og en månedlig frafaldsrate på fem procent.\n$ A = \\frac{100000 \\cdot 0{,}0005}{0{,}05} = 1000 $\nAltså kan du under de forudsætninger ikke forvente mere end maksimalt 1000 abonnenter.\nFå læsere - få abonnenter Hvis du i stedet kun har 10.000 læsere rammes vækstloftet allerede ved 100 opnåede abonnenter og så fremdeles.\nHvis dit medie er mere specialiseret, kan du måske øge konverteringsraten og sænke frafaldsraten, men så er det til gengæld også sværere at opnå det store antal læsere.\nOg husk på: Med tiden vil et større antal af læserne allerede være abonnenter og kan således ikke vindes. Og i takt med at antallet af abonnenter stiger vil det samlede antal abonnenter, der tabes, gøre det samme.\nDin vækst vil med andre ord flade asymptotisk ud, når antallet af abonnenter nærmer sig vækstloftet. Og så vil antallet ellers forblive omkring vækstloftet, med mindre du kan ændre markant på nogle af de nævnte faktorer.\nDu vil altså med stor sandsyblighed opleve at det bliver svært at opretholde vækst.\nOg du vil med næsten usvigelig sikkerhed ramme loftet. Og man kan nå dertil overraskende hurtigt.\nKan du leve af for eksempel 500 abonnenter - eller af 1000?\nDet kommer vel dels an på, hvor meget hver især betaler om måneden. Men prisen på abonnementet påvirker også antallet af abonnementer som kan sælges og dermed antallet af abonnenter som kan vindes og fastholdes.\nDet vender vil tilbage til.\n"
    }
    
    , 
    {
        "url": "/erfaringer/some/delinger-bonus-linkedin/",
        "title": "Delinger giver bonus på LinkedIn",
        "content": "Læg relevante links på LinkedIn og forøg antallet af besøg til din profilside mangefold.\nFor ganske nylig begyndte jeg via LinkedIn at dele links til min blog her på Kiils .\nI første omgang var hensigten at dele ud af de erfaringer, som opbygningen af et digitalt medie helt fra bunden, har givet mig. Og det er ikke så få!\nJeg har brugt fem år på at skabe Folkets Avis , og i det tidsrum har jeg faktisk kun sporadisk haft tid til at bruge LinkedIn.\nModtagelsen på LinkedIn efter fem års pause har været rigtig god. Se blot her:\nMin aktivitetsforøgelse på LinkedIn, hvor jeg på det allerseneste flittigt har delt relevante links med originalt indhold, er i den grad blevet belønnet.\nMåske er der i dag mere fokus på indhold på LinkedIn end der var for fem år siden, da jeg sidst brugte LinkedIn med jævne mellemrum.\nI hvert fald kan jeg konstatere at deling af relevant og originalt indhold som links på LinkedIn resulterer i en markant stigning i antallet af mennesker som tjekker ens profilside ud.\nKonklusion:\nHvis du gerne vil have flere mennesker til at besøge din profilside på LinkedIn, skal du bare dele godt og originalt indhold.\nOm sammenhængen også gælder i samme grad hvis du deler andres indhold, skal jeg ikke kunne sige.\n"
    }
    
    , 
    {
        "url": "/emner/linkedin/",
        "title": "Lidt om LinkedIn",
        "content": ""
    }
    
    , 
    {
        "url": "/emner/sociale-medier/",
        "title": "Sociale medier",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/trafik/kilder/",
        "title": "Sociale medier vigtige – men husk de andre trafikkilder",
        "content": "2017 var et rekordår for Folkets Avis på mange måder.\nSåledes var også de samlede antal sidevisninger højere end noget tidligere år.\nSer vi på anskaffelse skete der noget lidt overraskende. I hvert fald når man tager i betratning at antallet af fans på Folkets Avis Facebook side voksede pænt hen over året og nærmede sig 10.000 ved dets afslutning.\nFor på trods af stigningen faldt antallet af brugere som blev sendt til Folkets Avis fra de sociale medier, og med de sociale medier menes praktisk taget ene og alene Facebook.\nDenne udvikling passer fint med Facebooks ambitioner om at holde flere brugere inden for Facebooks egne rammer. Samtidig gør medier klogt i at finde andre trafikkilder og opdyrke et eget trofast publikum.\nOg måske endda tænke lidt i SEO-optimering.\nFolkets Avis oplevede således en stor stigning - næsten en fordobling - af forside trafik i 2017 i forhold il 2016. Det er godt.\nFlere kom også ind via søgninger på Google. Og web push notifikationer via Onesignal.\nEt område hvor Folkets Avis virkelig kan oppe sig er på email. Altså at få brugere ind gennem nyhedsbreve.\nUdviklingen på fem områder fra 2016 til 2017:\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/overhaling/",
        "title": "Når de små medier overhaler de store",
        "content": "Den korte afstand mellem læser og redaktion er en fordel.\nDe små medier er generelt mere manøvredygtige end de store. Det gælder også på indholdsstrategien.\nDet betyder at små medier kan reagere hurtigt på internationale trends.\nEt eksempel på dette er at Folkets Avis har skrevet meget om Jordan Peterson. Det har de store danske medier ikke, på trods af at han er en meget omtalt mand i den internationale presse.\nArbejdsgangene er kortere - og afstanden mellem læsere og redaktion ligeså - på de små medier.\nOg nogle gange er det læserne der her fingeren på pulsen.\nFolkets Avis giver så læseren mulighed for at blive skribent. Og i tilfældet Jordan Peterson har det for alvor givet pote.\n"
    }
    
    , 
    {
        "url": "/erfaringer/devops/language-domains/",
        "title": "",
        "content": "Efter databases connction info\n$config[\u0026lsquo;language.negotiation\u0026rsquo;][\u0026lsquo;url\u0026rsquo;][\u0026lsquo;domains\u0026rsquo;][\u0026lsquo;en\u0026rsquo;] = \u0026lsquo;my-en-url.localhost\u0026rsquo;; $config[\u0026lsquo;language.negotiation\u0026rsquo;][\u0026lsquo;url\u0026rsquo;][\u0026lsquo;domains\u0026rsquo;][\u0026lsquo;de\u0026rsquo;] = \u0026lsquo;my-de-url.localhost\u0026rsquo;; $config[\u0026lsquo;language.negotiation\u0026rsquo;][\u0026lsquo;url\u0026rsquo;][\u0026lsquo;domains\u0026rsquo;][\u0026lsquo;es\u0026rsquo;] = \u0026lsquo;my-es-url.localhost\u0026rsquo;; $config[\u0026lsquo;language.negotiation\u0026rsquo;][\u0026lsquo;url\u0026rsquo;][\u0026lsquo;domains\u0026rsquo;][\u0026lsquo;fr\u0026rsquo;] = \u0026lsquo;my-fr-url.localhost\u0026rsquo;;\n"
    }
    
    , 
    {
        "url": "/erfaringer/devops/litespeed-server/",
        "title": "",
        "content": "Search Api suggestions only working for loggged in users\n"
    }
    
    , 
    {
        "url": "/erfaringer/devops/workflow/rollback/",
        "title": "",
        "content": "https://www.bounteous.com/insights/2020/03/11/automate-drupal-deployments/\n"
    }
    
    , 
    {
        "url": "/erfaringer/indhold/tegninger-grafik-illustrationer-billeder-fotos-gratis/",
        "title": "",
        "content": "https://undraw.co/illustrations\nhttp://www.heropatterns.com/\nJeg har ikke taget ikoner med.\nIkoner - mange. Men ofte er der enfin utf-8 karakter som kan klare opgaven.\n"
    }
    
    , 
    {
        "url": "/erfaringer/muren/dogmer/",
        "title": "",
        "content": "Medier uden mur\nAlle medier på FOLKETS er frit tilgængelige - ingen betlaingsmur.\n"
    }
    
    , 
    {
        "url": "/erfaringer/test/",
        "title": "",
        "content": ""
    }
    
    , 
    {
        "url": "/erfaringer/tips-tricks/git-tips/",
        "title": "",
        "content": "Reset dev branch til master\ngit checkout dev git reset --hard master git push --force origin dev "
    }
    
    , 
    {
        "url": "/cases/coronakatastrofen/",
        "title": "Coronakatastrofen",
        "content": "En dansk brand- og medieplatform\nCoronakatastrofen er en bog om coronavirus.\n"
    }
    
    , 
    {
        "url": "/brands/digitalt/",
        "title": "digitalt",
        "content": ""
    }
    
    , 
    {
        "url": "/kontakt/",
        "title": "Kontakt",
        "content": "Du kan ringe på telefon 40261872 eller skrive en mail direkte til lennart@kiils.dk\nPostadresse:\nKiils v/Lennart Kiil Kirkeskov Allé 72 3050 Humlebæk\neller bruge kontaktformularen\nYour Name Email Address An email address is required.  Message   "
    }
    
    , 
    {
        "url": "/kunder/lars-vestergaard/",
        "title": "Lars Vestergaard",
        "content": "Kiils har længe arbejdet sammen med Lars Vestergaard som besidder en række kvaliteter på det menneskelige plan som er særdeles væsentlige i forhold til langvarigt samarbejde såsom loyalitet, pålidelighed og høj arbejdsetik.\nLars Vestergaard har især vist sin kunnen inden for salg og marketing via alle digitale kanaler, men også når det har været påkrævet inden for trafikoptimering og SEO.\nLars Vestergaard er ansvarlig og tilstedeværende og lever sig ind i sine klienters og kunders behov. Han har en iværksætters flid og ihærdighed kombineret med den professionelisme som er essentiel på den lange bane.\n"
    }
    
    , 
    {
        "url": "/brands/mediem%C3%B8llen/",
        "title": "Mediemøllen",
        "content": ""
    }
    
    , 
    {
        "url": "/brands/oplevelser/",
        "title": "Oplevelser",
        "content": ""
    }
    
    , 
    {
        "url": "/priser/",
        "title": "Priser",
        "content": "Prisen er ens for offentlige institutioner, virksomheder og privatpersoner.\nKr. 800 i timen.\nDer afregnes kun i hele timer.\nPris eksklusiv moms.\n"
    }
    
    , 
    {
        "url": "/brands/r%C3%A6vekagen/",
        "title": "Rævekagen",
        "content": "Rævekagen Satire og provokerende politisk analyse.\nFokus på personer, magtkampe, hykleri.\n"
    }
    
    , 
    {
        "url": "/search/",
        "title": "Søgning",
        "content": "  // define globale variables var idx, searchInput, searchResults = null var documents = [] function renderSearchResults(results){ if (results.length  0) { // show max 10 results if (results.length  9){ results = results.slice(0,10) } // reset search results searchResults.innerHTML = '' // append results results.forEach(result = { // create result item var article = document.createElement('article') article.innerHTML = ` ${documents[result.ref].title}   ` searchResults.appendChild(article) }) // if results are empty } else { searchResults.innerHTML = 'Ingen resultater.\n' } } function registerSearchHandler() { // register on input event searchInput.oninput = function(event) { // remove search results if the user empties the search input field if (searchInput.value == '') { searchResults.innerHTML = '' } else { // get input value var query = event.target.value // run fuzzy search var results = idx.search(query + '*') // render results renderSearchResults(results) } } // set focus on search input and remove loading placeholder searchInput.focus() searchInput.placeholder = '⌕' } window.onload = function() { // get dom elements searchInput = document.getElementById('search-input') searchResults = document.getElementById('search-results') // request and index documents fetch('/index.json', { method: 'get' }).then( res = res.json() ).then( res = { // index document idx = lunr(function() { this.ref('url') this.field('title') this.field('content') res.forEach(function(doc) { this.add(doc) documents[doc.url] = { 'title': doc.title, 'content': doc.content, } }, this) }) // data is loaded, next register handler registerSearchHandler() } ).catch( err = { searchResults.innerHTML = `${err}\n` } ) }  Tast søgeord i feltet Noget du ikke fandt? Kontakt Kiils    input::placeholder { text-align: right; }  "
    }
    
]
