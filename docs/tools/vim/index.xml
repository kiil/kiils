<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on KIILS</title>
    <link>https://www.kiils.dk/tools/vim/</link>
    <description>Recent content in Vim on KIILS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>da-dk</language>
    <lastBuildDate>Mon, 21 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.kiils.dk/tools/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-andet/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-andet/</guid>
      <description>CTRL-] er CTRL-å</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-buffers/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-buffers/</guid>
      <description>:ba open each buffer in &amp;ldquo;window&amp;rdquo; / &amp;ldquo;split&amp;rdquo; :enew doesn&amp;rsquo;t take any arguments and opens a blank buffer. Kræver ikke filnavn :new in new window / split :edit closes my existing buffer.
:buffers: List available buffers :ls: Same as above :bn: Switch to next buffer :bp: Switch to previous buffer :bfirst: Switch to first buffer :blast: Switch to last buffer :bdelete: Delete the current buffer :badd: Open a new buffer with the filename that follows :e: Edit another file in a new buffer and switch to it.</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-erstat/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-erstat/</guid>
      <description>You don&amp;rsquo;t need to use the slash character as the expression delimiter. Whatever character follows the :s is defined to be the delimiter character. You can use most non-alphanumeric characters (but not , &amp;quot; or |).
Kun på søgeordet nærmest cursoren
:s/[pattern]/[replacement] Eksempel:
:s/han/hun Kun på den linje hvor cursoren befinder sig
:s/[pattern]/[replacement]/g Eksempel:
:s/han/hun/g Hele filen
:%s/[pattern]/[replacement]/g Eksempel:
:%s/han/hun/g Hvis hvert tilfælde skal bekræftes tilføjes et c for confirm, sådan her:</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-file-management/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-file-management/</guid>
      <description>** Gem en del af en fil, ved at skrive v bevægelse :w FILNAVN **
** Indsæt indholdet af en fil, ved at skrive :r FILNAVN **
Mange filer Mange filer fra kommandolinjen inden vim åbnes vim *.md # åbner alle md filer i pågældende folder Mange filer når vim allerede er åben Se: https://vi.stackexchange.com/questions/2607/how-to-open-multiple-files-matching-a-wildcard-expression
:args *.md # åbner alle md filer i args-listen :n[ext] *.md # aåbner alle md fil som buffers :e ny .</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-fzf/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-fzf/</guid>
      <description>FZF syntax Let&amp;rsquo;s go over syntax so we can search more efficiently. Fortunately for us, there aren&amp;rsquo;t many to learn.
^ is a prefix exact match. To search for phrase starting with &amp;ldquo;welcome&amp;rdquo;, we do ^welcome. $ is a suffix exact match. To search for phrase ending with &amp;ldquo;my friends&amp;rdquo;, we do friends$. &#39; is an exact match. To search for phrase &amp;ldquo;welcome my friends&amp;rdquo;, we do &amp;lsquo;welcome my friends. | is an &amp;ldquo;or&amp;rdquo; match.</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-generelt/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-generelt/</guid>
      <description>Kommandoer Generelt :set nu linjenummer til
:set nu! linjenummer fra
Bevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.
&amp;lt;antal&amp;gt;[retning og objekt] Tegn h tegn tilbage
l tegn frem
&amp;lt;tal&amp;gt;go Absout fra start af fil
Character Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line.</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-handlinger/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-handlinger/</guid>
      <description>(subjektobjekt)
2d2w = 4dw = d4w
2d2w = 4d1w = 1d4w
For at arbejde effektivt, hurtigt og kreativt, så foretrækker jeg at splitte skriveproces og redigeringsproces op.
Derfor er jeg gladd for at vim har to modes som passer til det worflow. Og når jeg reidgerer vil jeg helst blive i normal mode.
Blive i normal  r - i normal-mode udskift (replace) et tegn under cursoren uden at skifte til insert</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-intro/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-intro/</guid>
      <description>Kommandoer Generelt :set nu linjenummer til
:set nu! linjenummer fra
Bevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.
&amp;lt;antal&amp;gt;[retning og objekt] Tegn h tegn tilbage
l tegn frem
&amp;lt;tal&amp;gt;go Absout fra start af fil
Character Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line.</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-kommando/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-kommando/</guid>
      <description>:vnew | r ! pdt # :w! temp.html | silent !open /Applications/Safari.app % </description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-motions/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-motions/</guid>
      <description>If you type A after G you will enter insert mode at the end of the last line.
If you just want to go to the last character, then G-End will suffice
Exchange https://github.com/tommcdo/vim-exchange
Virker også på tekstobjekter
Transpose two characters In Emacs, you have C-t (transpose-chars) which transposes the two characters before the cursor, for instance to turn normla into normal. The equivalent keypress in Vim is xp (or Xp, depending on cursor position): Delete a character and put it after the following character.</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-multiple/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-multiple/</guid>
      <description>:bn - Switch to next buffer
:bp - Switch to previous buffer
:bd - Close a buffer
:sp [filename] - Opens a new file and splits your screen horizontally to show more than one buffer
:vsp [filename] - Opens a new file and splits your screen vertically to show more than one buffer
:ls - Lists all open buffers
Ctrl + ws - Split windows horizontally
Ctrl + wv - Split windows vertically</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-redigering/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-redigering/</guid>
      <description>Kommandoer som J for join. For eksempel 4J for at samle fire linjer til at afsnit. Det kan man spare meget tid med. ( og ) flytter frem og tilbage i sætninger som på den måde kan splittes også vis og vas kan bruges. Specifikt vasA-slet-retur.
Thus: :.,$j meaning &amp;ldquo;from the current line to the last line, join them all into one line&amp;rdquo;. :% is synonymous with :1,$ (all the lines).</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-tekstobjekter/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-tekstobjekter/</guid>
      <description>Exchange https://github.com/tommcdo/vim-exchange
Virker også på tekstobjekter
Kommandoer Generelt :set nu linjenummer til
:set nu! linjenummer fra
Bevægelse Generelt for bevægelse gælder at det sted man er, tæller med. Alrtså at bevægelsen sker fra cursorens position.
&amp;lt;antal&amp;gt;[retning og objekt] Tegn h tegn tilbage
l tegn frem
&amp;lt;tal&amp;gt;go Absout fra start af fil
Character Movement The f and F commands are extremely useful for navigating within a line. Pressing f{char} will move the next occurrence of {char} within the current line.</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-tips-tricks/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-tips-tricks/</guid>
      <description>i  for example: 12ia will insert 12 a&amp;rsquo;s. share follow answered Apr 27 &amp;lsquo;11 at 13:53
qed 18.9k1616 gold badges9292 silver badges152152 bronze badges 8 This is the exact sequence of commands the OP wanted to avoid. – Kenny Evitt Sep 3 &amp;lsquo;15 at 19:26 add a comment
17
Through single repeat:
Insert mode Esc 80.
Kommandoer Generelt :set nu linjenummer til
:set nu! linjenummer fra
Bevægelse Generelt for bevægelse gælder at det sted man er, tæller med.</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-visual/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-visual/</guid>
      <description>V Visual mode allows you to select a block of text in Vim. Once a block of text is selected you can use visual commands to perform actions on the selected text such as deleting it, copying it, etc.
v - starts visual mode, you can then select a range of text, and run a command
V - starts linewise visual mode (selects entire lines)
Ctrl + v - starts visual block mode (selects columns)</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-wiki/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-wiki/</guid>
      <description>Vim wiki og diary VimWiki Cheatsheet [number] refers to the wiki number, set by the order in your vimrc. The default is 1.
Wiki Management [number]  ww - open wiki index file [number]  wt - open wiki index file in new tab  ws - list and select available wikis  wd - delete wiki page  wr - rename wiki page Diary management [number]  wi - open diary index file for wiki  w  i - update current diary index [number]  w  w - open today’s diary file for wiki [number]  w  t - open today’s diary file for wiki in new tab  - open previous day’s diary  - open next day’s diary Navigation  - follow/create wiki link  - follow/create wiki link in new tab  - go back to previous wiki page  - go to next link on current page  - go to previous link on current page Editing shortcuts  - toggle list item on/off = - add header level</description>
    </item>
    
    <item>
      <title>vim cheat sheet</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-zettelkasten/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-zettelkasten/</guid>
      <description>(subjektobjekt)
2d2w = 4dw = d4w
2d2w = 4d1w = 1d4w
For at arbejde effektivt, hurtigt og kreativt, så foretrækker jeg at splitte skriveproces og redigeringsproces op.
Derfor er jeg gladd for at vim har to modes som passer til det worflow. Og når jeg reidgerer vil jeg helst blive i normal mode.
Blive i normal  r - i normal-mode udskift (replace) et tegn under cursoren uden at skifte til insert</description>
    </item>
    
    <item>
      <title>vim registre</title>
      <link>https://www.kiils.dk/erfaringer/indhold/vim-registre/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.kiils.dk/erfaringer/indhold/vim-registre/</guid>
      <description>Jeg bruger registre til for eksempel længere navne som jeg ved jeg kommer til at skulle skrive flere gange i en tekst.
sheet
Der er en række danske love og en række EU-love som har til hensigt at sikre lige muligheder for kvinder og mænd.
Disse love skal blandt andet sikre at ingen bliver diskrimineret imod på grund af sit køn.
Ctrl+r+registernavn (uden &amp;ldquo;) sætter ind fra registeret.
:reg a b c --- Registers --- &amp;quot;a register a content &amp;quot;b register b content &amp;quot;c register c content </description>
    </item>
    
  </channel>
</rss>